/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./src/config/gameConfig.ts":
/*!**********************************!*\
  !*** ./src/config/gameConfig.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   gameConfig: () => (/* binding */ gameConfig)\n/* harmony export */ });\n// src/config/gameConfig.ts\n// Symbol configuration\nconst symbols = {\n    // Low tier symbols\n    \"low-gear\": {\n        name: \"Gear\",\n        imagePath: \"/assets/images/symbols/low-tier/gear.png\",\n        tier: \"low\",\n        payout: 5,\n        probability: 0.15\n    },\n    \"low-token\": {\n        name: \"Token\",\n        imagePath: \"/assets/images/symbols/low-tier/token.png\",\n        tier: \"low\",\n        payout: 8,\n        probability: 0.15\n    },\n    \"low-badge\": {\n        name: \"Badge\",\n        imagePath: \"/assets/images/symbols/low-tier/badge.png\",\n        tier: \"low\",\n        payout: 10,\n        probability: 0.15\n    },\n    // Mid tier symbols\n    \"mid-robot\": {\n        name: \"Robot\",\n        imagePath: \"/assets/images/symbols/mid-tier/robot.png\",\n        tier: \"mid\",\n        payout: 15,\n        probability: 0.1\n    },\n    \"mid-helmet\": {\n        name: \"Helmet\",\n        imagePath: \"/assets/images/symbols/mid-tier/helmet.png\",\n        tier: \"mid\",\n        payout: 20,\n        probability: 0.1\n    },\n    \"mid-future\": {\n        name: \"Future Tech\",\n        imagePath: \"/assets/images/symbols/mid-tier/future.png\",\n        tier: \"mid\",\n        payout: 25,\n        probability: 0.1\n    },\n    // High tier symbols\n    \"high-tardi\": {\n        name: \"TARDI Logo\",\n        imagePath: \"/assets/images/symbols/high-tier/tardi.png\",\n        tier: \"high\",\n        payout: 50,\n        probability: 0.05\n    },\n    // Special symbols\n    \"multiplier-2x\": {\n        name: \"2x Multiplier\",\n        imagePath: \"/assets/images/symbols/special/multiplier-2x.png\",\n        tier: \"special\",\n        payout: 0,\n        probability: 0.05,\n        multiplier: 2\n    },\n    \"multiplier-5x\": {\n        name: \"5x Multiplier\",\n        imagePath: \"/assets/images/symbols/special/multiplier-5x.png\",\n        tier: \"special\",\n        payout: 0,\n        probability: 0.03,\n        multiplier: 5\n    },\n    \"multiplier-10x\": {\n        name: \"10x Multiplier\",\n        imagePath: \"/assets/images/symbols/special/multiplier-10x.png\",\n        tier: \"special\",\n        payout: 0,\n        probability: 0.02,\n        multiplier: 10\n    },\n    \"free-spin\": {\n        name: \"Free Spin\",\n        imagePath: \"/assets/images/symbols/special/free-spin.png\",\n        tier: \"special\",\n        payout: 0,\n        probability: 0.1,\n        freeSpins: 1\n    }\n};\n// Game configuration\nconst gameConfig = {\n    // Basic game settings\n    name: \"T-NGMI Slots\",\n    description: \"T-NGMI themed 3x3 slot machine game on the Sui blockchain\",\n    version: \"1.0.0\",\n    // Game rules\n    reelCount: 3,\n    rowCount: 3,\n    minBet: 5,\n    maxBet: 100,\n    defaultBet: 10,\n    paylineCount: 5,\n    // RTP (Return to Player) percentage\n    rtp: 95,\n    // Symbols configuration\n    symbols,\n    // Contract addresses\n    contractAddress: {\n        packageId: \"0x123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234\",\n        moduleId: \"ngmi_slots\",\n        upgradeCapId: \"0xabcdef123456789abcdef123456789abcdef123456789abcdef123456789abc\"\n    },\n    // Token configuration\n    tokenConfig: {\n        symbol: \"TARDI\",\n        decimals: 9,\n        iconUrl: \"/assets/images/tardi-token.png\"\n    },\n    // Win calculation\n    jackpotMultiplier: 50,\n    // Animation speeds\n    animationSpeed: {\n        default: 1.0,\n        fast: 0.5\n    },\n    // Sound configuration\n    sounds: {\n        spin: \"/assets/audio/spin.mp3\",\n        win: \"/assets/audio/win.mp3\",\n        bigWin: \"/assets/audio/big-win.mp3\",\n        jackpot: \"/assets/audio/jackpot.mp3\",\n        reelStop: \"/assets/audio/reel-stop.mp3\",\n        buttonClick: \"/assets/audio/button-click.mp3\"\n    },\n    // Music tracks\n    music: {\n        background: \"/assets/audio/music/background.mp3\"\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (gameConfig);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnL2dhbWVDb25maWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwyQkFBMkI7QUFHM0IsdUJBQXVCO0FBQ3ZCLE1BQU1BLFVBQXNDO0lBQzFDLG1CQUFtQjtJQUNuQixZQUFZO1FBQ1ZDLE1BQU07UUFDTkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsYUFBYTtJQUNmO0lBQ0EsYUFBYTtRQUNYSixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsTUFBTTtRQUNOQyxRQUFRO1FBQ1JDLGFBQWE7SUFDZjtJQUNBLGFBQWE7UUFDWEosTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7SUFFQSxtQkFBbUI7SUFDbkIsYUFBYTtRQUNYSixNQUFNO1FBQ05DLFdBQVc7UUFDWEMsTUFBTTtRQUNOQyxRQUFRO1FBQ1JDLGFBQWE7SUFDZjtJQUNBLGNBQWM7UUFDWkosTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7SUFDQSxjQUFjO1FBQ1pKLE1BQU07UUFDTkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsYUFBYTtJQUNmO0lBRUEsb0JBQW9CO0lBQ3BCLGNBQWM7UUFDWkosTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7SUFFQSxrQkFBa0I7SUFDbEIsaUJBQWlCO1FBQ2ZKLE1BQU07UUFDTkMsV0FBVztRQUNYQyxNQUFNO1FBQ05DLFFBQVE7UUFDUkMsYUFBYTtRQUNiQyxZQUFZO0lBQ2Q7SUFDQSxpQkFBaUI7UUFDZkwsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxhQUFhO1FBQ2JDLFlBQVk7SUFDZDtJQUNBLGtCQUFrQjtRQUNoQkwsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxhQUFhO1FBQ2JDLFlBQVk7SUFDZDtJQUNBLGFBQWE7UUFDWEwsTUFBTTtRQUNOQyxXQUFXO1FBQ1hDLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxhQUFhO1FBQ2JFLFdBQVc7SUFDYjtBQUNGO0FBRUEscUJBQXFCO0FBQ2QsTUFBTUMsYUFBeUI7SUFDcEMsc0JBQXNCO0lBQ3RCUCxNQUFNO0lBQ05RLGFBQWE7SUFDYkMsU0FBUztJQUVULGFBQWE7SUFDYkMsV0FBVztJQUNYQyxVQUFVO0lBQ1ZDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxZQUFZO0lBQ1pDLGNBQWM7SUFFZCxvQ0FBb0M7SUFDcENDLEtBQUs7SUFFTCx3QkFBd0I7SUFDeEJqQjtJQUVBLHFCQUFxQjtJQUNyQmtCLGlCQUFpQjtRQUNmQyxXQUFXO1FBQ1hDLFVBQVU7UUFDVkMsY0FBYztJQUNoQjtJQUVBLHNCQUFzQjtJQUN0QkMsYUFBYTtRQUNYQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsU0FBUztJQUNYO0lBRUEsa0JBQWtCO0lBQ2xCQyxtQkFBbUI7SUFFbkIsbUJBQW1CO0lBQ25CQyxnQkFBZ0I7UUFDZEMsU0FBUztRQUNUQyxNQUFNO0lBQ1I7SUFFQSxzQkFBc0I7SUFDdEJDLFFBQVE7UUFDTkMsTUFBTTtRQUNOQyxLQUFLO1FBQ0xDLFFBQVE7UUFDUkMsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtJQUVBLGVBQWU7SUFDZkMsT0FBTztRQUNMQyxZQUFZO0lBQ2Q7QUFDRixFQUFFO0FBRUYsaUVBQWU5QixVQUFVQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmdtaS1zbG90cy8uL3NyYy9jb25maWcvZ2FtZUNvbmZpZy50cz9kMjFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb25maWcvZ2FtZUNvbmZpZy50c1xuaW1wb3J0IHsgR2FtZUNvbmZpZywgR2FtZVN5bWJvbCB9IGZyb20gJy4uL3R5cGVzL2dhbWUnO1xuXG4vLyBTeW1ib2wgY29uZmlndXJhdGlvblxuY29uc3Qgc3ltYm9sczogUmVjb3JkPHN0cmluZywgR2FtZVN5bWJvbD4gPSB7XG4gIC8vIExvdyB0aWVyIHN5bWJvbHNcbiAgJ2xvdy1nZWFyJzoge1xuICAgIG5hbWU6ICdHZWFyJyxcbiAgICBpbWFnZVBhdGg6ICcvYXNzZXRzL2ltYWdlcy9zeW1ib2xzL2xvdy10aWVyL2dlYXIucG5nJyxcbiAgICB0aWVyOiAnbG93JyxcbiAgICBwYXlvdXQ6IDUsXG4gICAgcHJvYmFiaWxpdHk6IDAuMTUsIC8vIEhpZ2hlciBwcm9iYWJpbGl0eSBmb3IgbG93IHRpZXJcbiAgfSxcbiAgJ2xvdy10b2tlbic6IHtcbiAgICBuYW1lOiAnVG9rZW4nLFxuICAgIGltYWdlUGF0aDogJy9hc3NldHMvaW1hZ2VzL3N5bWJvbHMvbG93LXRpZXIvdG9rZW4ucG5nJyxcbiAgICB0aWVyOiAnbG93JyxcbiAgICBwYXlvdXQ6IDgsXG4gICAgcHJvYmFiaWxpdHk6IDAuMTUsXG4gIH0sXG4gICdsb3ctYmFkZ2UnOiB7XG4gICAgbmFtZTogJ0JhZGdlJyxcbiAgICBpbWFnZVBhdGg6ICcvYXNzZXRzL2ltYWdlcy9zeW1ib2xzL2xvdy10aWVyL2JhZGdlLnBuZycsXG4gICAgdGllcjogJ2xvdycsXG4gICAgcGF5b3V0OiAxMCxcbiAgICBwcm9iYWJpbGl0eTogMC4xNSxcbiAgfSxcbiAgXG4gIC8vIE1pZCB0aWVyIHN5bWJvbHNcbiAgJ21pZC1yb2JvdCc6IHtcbiAgICBuYW1lOiAnUm9ib3QnLFxuICAgIGltYWdlUGF0aDogJy9hc3NldHMvaW1hZ2VzL3N5bWJvbHMvbWlkLXRpZXIvcm9ib3QucG5nJyxcbiAgICB0aWVyOiAnbWlkJyxcbiAgICBwYXlvdXQ6IDE1LFxuICAgIHByb2JhYmlsaXR5OiAwLjEsXG4gIH0sXG4gICdtaWQtaGVsbWV0Jzoge1xuICAgIG5hbWU6ICdIZWxtZXQnLFxuICAgIGltYWdlUGF0aDogJy9hc3NldHMvaW1hZ2VzL3N5bWJvbHMvbWlkLXRpZXIvaGVsbWV0LnBuZycsXG4gICAgdGllcjogJ21pZCcsXG4gICAgcGF5b3V0OiAyMCxcbiAgICBwcm9iYWJpbGl0eTogMC4xLFxuICB9LFxuICAnbWlkLWZ1dHVyZSc6IHtcbiAgICBuYW1lOiAnRnV0dXJlIFRlY2gnLFxuICAgIGltYWdlUGF0aDogJy9hc3NldHMvaW1hZ2VzL3N5bWJvbHMvbWlkLXRpZXIvZnV0dXJlLnBuZycsXG4gICAgdGllcjogJ21pZCcsXG4gICAgcGF5b3V0OiAyNSxcbiAgICBwcm9iYWJpbGl0eTogMC4xLFxuICB9LFxuICBcbiAgLy8gSGlnaCB0aWVyIHN5bWJvbHNcbiAgJ2hpZ2gtdGFyZGknOiB7XG4gICAgbmFtZTogJ1RBUkRJIExvZ28nLFxuICAgIGltYWdlUGF0aDogJy9hc3NldHMvaW1hZ2VzL3N5bWJvbHMvaGlnaC10aWVyL3RhcmRpLnBuZycsXG4gICAgdGllcjogJ2hpZ2gnLFxuICAgIHBheW91dDogNTAsXG4gICAgcHJvYmFiaWxpdHk6IDAuMDUsIC8vIExvd2VyIHByb2JhYmlsaXR5IGZvciBoaWdoIHBheW91dFxuICB9LFxuICBcbiAgLy8gU3BlY2lhbCBzeW1ib2xzXG4gICdtdWx0aXBsaWVyLTJ4Jzoge1xuICAgIG5hbWU6ICcyeCBNdWx0aXBsaWVyJyxcbiAgICBpbWFnZVBhdGg6ICcvYXNzZXRzL2ltYWdlcy9zeW1ib2xzL3NwZWNpYWwvbXVsdGlwbGllci0yeC5wbmcnLFxuICAgIHRpZXI6ICdzcGVjaWFsJyxcbiAgICBwYXlvdXQ6IDAsIC8vIE5vIGRpcmVjdCBwYXlvdXQsIG11bHRpcGxpZXMgd2luIGluc3RlYWRcbiAgICBwcm9iYWJpbGl0eTogMC4wNSxcbiAgICBtdWx0aXBsaWVyOiAyLFxuICB9LFxuICAnbXVsdGlwbGllci01eCc6IHtcbiAgICBuYW1lOiAnNXggTXVsdGlwbGllcicsXG4gICAgaW1hZ2VQYXRoOiAnL2Fzc2V0cy9pbWFnZXMvc3ltYm9scy9zcGVjaWFsL211bHRpcGxpZXItNXgucG5nJyxcbiAgICB0aWVyOiAnc3BlY2lhbCcsXG4gICAgcGF5b3V0OiAwLFxuICAgIHByb2JhYmlsaXR5OiAwLjAzLFxuICAgIG11bHRpcGxpZXI6IDUsXG4gIH0sXG4gICdtdWx0aXBsaWVyLTEweCc6IHtcbiAgICBuYW1lOiAnMTB4IE11bHRpcGxpZXInLFxuICAgIGltYWdlUGF0aDogJy9hc3NldHMvaW1hZ2VzL3N5bWJvbHMvc3BlY2lhbC9tdWx0aXBsaWVyLTEweC5wbmcnLFxuICAgIHRpZXI6ICdzcGVjaWFsJyxcbiAgICBwYXlvdXQ6IDAsXG4gICAgcHJvYmFiaWxpdHk6IDAuMDIsXG4gICAgbXVsdGlwbGllcjogMTAsXG4gIH0sXG4gICdmcmVlLXNwaW4nOiB7XG4gICAgbmFtZTogJ0ZyZWUgU3BpbicsXG4gICAgaW1hZ2VQYXRoOiAnL2Fzc2V0cy9pbWFnZXMvc3ltYm9scy9zcGVjaWFsL2ZyZWUtc3Bpbi5wbmcnLFxuICAgIHRpZXI6ICdzcGVjaWFsJyxcbiAgICBwYXlvdXQ6IDAsIC8vIE5vIGRpcmVjdCBwYXlvdXQsIGdpdmVzIGZyZWUgc3BpbnMgaW5zdGVhZFxuICAgIHByb2JhYmlsaXR5OiAwLjEsXG4gICAgZnJlZVNwaW5zOiAxLFxuICB9LFxufTtcblxuLy8gR2FtZSBjb25maWd1cmF0aW9uXG5leHBvcnQgY29uc3QgZ2FtZUNvbmZpZzogR2FtZUNvbmZpZyA9IHtcbiAgLy8gQmFzaWMgZ2FtZSBzZXR0aW5nc1xuICBuYW1lOiAnVC1OR01JIFNsb3RzJyxcbiAgZGVzY3JpcHRpb246ICdULU5HTUkgdGhlbWVkIDN4MyBzbG90IG1hY2hpbmUgZ2FtZSBvbiB0aGUgU3VpIGJsb2NrY2hhaW4nLFxuICB2ZXJzaW9uOiAnMS4wLjAnLFxuICBcbiAgLy8gR2FtZSBydWxlc1xuICByZWVsQ291bnQ6IDMsXG4gIHJvd0NvdW50OiAzLFxuICBtaW5CZXQ6IDUsXG4gIG1heEJldDogMTAwLFxuICBkZWZhdWx0QmV0OiAxMCxcbiAgcGF5bGluZUNvdW50OiA1LFxuICBcbiAgLy8gUlRQIChSZXR1cm4gdG8gUGxheWVyKSBwZXJjZW50YWdlXG4gIHJ0cDogOTUsIC8vIDk1JSBSVFBcbiAgXG4gIC8vIFN5bWJvbHMgY29uZmlndXJhdGlvblxuICBzeW1ib2xzLFxuICBcbiAgLy8gQ29udHJhY3QgYWRkcmVzc2VzXG4gIGNvbnRyYWN0QWRkcmVzczoge1xuICAgIHBhY2thZ2VJZDogJzB4MTIzNDU2Nzg5YWJjZGVmMTIzNDU2Nzg5YWJjZGVmMTIzNDU2Nzg5YWJjZGVmMTIzNDU2Nzg5YWJjZGVmMTIzNCcsXG4gICAgbW9kdWxlSWQ6ICduZ21pX3Nsb3RzJyxcbiAgICB1cGdyYWRlQ2FwSWQ6ICcweGFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiYydcbiAgfSxcbiAgXG4gIC8vIFRva2VuIGNvbmZpZ3VyYXRpb25cbiAgdG9rZW5Db25maWc6IHtcbiAgICBzeW1ib2w6ICdUQVJESScsXG4gICAgZGVjaW1hbHM6IDksXG4gICAgaWNvblVybDogJy9hc3NldHMvaW1hZ2VzL3RhcmRpLXRva2VuLnBuZydcbiAgfSxcbiAgXG4gIC8vIFdpbiBjYWxjdWxhdGlvblxuICBqYWNrcG90TXVsdGlwbGllcjogNTAsIC8vIEphY2twb3QgaXMgNTB4IHRoZSBiZXQgYW1vdW50XG4gIFxuICAvLyBBbmltYXRpb24gc3BlZWRzXG4gIGFuaW1hdGlvblNwZWVkOiB7XG4gICAgZGVmYXVsdDogMS4wLFxuICAgIGZhc3Q6IDAuNSwgLy8gMnggZmFzdGVyXG4gIH0sXG4gIFxuICAvLyBTb3VuZCBjb25maWd1cmF0aW9uXG4gIHNvdW5kczoge1xuICAgIHNwaW46ICcvYXNzZXRzL2F1ZGlvL3NwaW4ubXAzJyxcbiAgICB3aW46ICcvYXNzZXRzL2F1ZGlvL3dpbi5tcDMnLFxuICAgIGJpZ1dpbjogJy9hc3NldHMvYXVkaW8vYmlnLXdpbi5tcDMnLFxuICAgIGphY2twb3Q6ICcvYXNzZXRzL2F1ZGlvL2phY2twb3QubXAzJyxcbiAgICByZWVsU3RvcDogJy9hc3NldHMvYXVkaW8vcmVlbC1zdG9wLm1wMycsXG4gICAgYnV0dG9uQ2xpY2s6ICcvYXNzZXRzL2F1ZGlvL2J1dHRvbi1jbGljay5tcDMnLFxuICB9LFxuICBcbiAgLy8gTXVzaWMgdHJhY2tzXG4gIG11c2ljOiB7XG4gICAgYmFja2dyb3VuZDogJy9hc3NldHMvYXVkaW8vbXVzaWMvYmFja2dyb3VuZC5tcDMnLFxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBnYW1lQ29uZmlnOyJdLCJuYW1lcyI6WyJzeW1ib2xzIiwibmFtZSIsImltYWdlUGF0aCIsInRpZXIiLCJwYXlvdXQiLCJwcm9iYWJpbGl0eSIsIm11bHRpcGxpZXIiLCJmcmVlU3BpbnMiLCJnYW1lQ29uZmlnIiwiZGVzY3JpcHRpb24iLCJ2ZXJzaW9uIiwicmVlbENvdW50Iiwicm93Q291bnQiLCJtaW5CZXQiLCJtYXhCZXQiLCJkZWZhdWx0QmV0IiwicGF5bGluZUNvdW50IiwicnRwIiwiY29udHJhY3RBZGRyZXNzIiwicGFja2FnZUlkIiwibW9kdWxlSWQiLCJ1cGdyYWRlQ2FwSWQiLCJ0b2tlbkNvbmZpZyIsInN5bWJvbCIsImRlY2ltYWxzIiwiaWNvblVybCIsImphY2twb3RNdWx0aXBsaWVyIiwiYW5pbWF0aW9uU3BlZWQiLCJkZWZhdWx0IiwiZmFzdCIsInNvdW5kcyIsInNwaW4iLCJ3aW4iLCJiaWdXaW4iLCJqYWNrcG90IiwicmVlbFN0b3AiLCJidXR0b25DbGljayIsIm11c2ljIiwiYmFja2dyb3VuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/config/gameConfig.ts\n");

/***/ }),

/***/ "./src/config/paylines.ts":
/*!********************************!*\
  !*** ./src/config/paylines.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   activePaylines: () => (/* binding */ activePaylines),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getPaylineById: () => (/* binding */ getPaylineById),\n/* harmony export */   paylines: () => (/* binding */ paylines)\n/* harmony export */ });\n// src/config/paylines.ts\n/**\n * Payline definition for the 3x3 slot machine\n * \n * The position format is [row, column] with 0-indexed values:\n * [0,0] [0,1] [0,2]\n * [1,0] [1,1] [1,2]\n * [2,0] [2,1] [2,2]\n * \n * Each payline consists of 3 positions to form a winning pattern\n */ const paylines = [\n    // Payline 1: Top row\n    {\n        id: 1,\n        positions: [\n            [\n                0,\n                0\n            ],\n            [\n                0,\n                1\n            ],\n            [\n                0,\n                2\n            ]\n        ],\n        color: \"#ff5252\",\n        name: \"Top Horizontal\"\n    },\n    // Payline 2: Middle row\n    {\n        id: 2,\n        positions: [\n            [\n                1,\n                0\n            ],\n            [\n                1,\n                1\n            ],\n            [\n                1,\n                2\n            ]\n        ],\n        color: \"#4caf50\",\n        name: \"Middle Horizontal\"\n    },\n    // Payline 3: Bottom row\n    {\n        id: 3,\n        positions: [\n            [\n                2,\n                0\n            ],\n            [\n                2,\n                1\n            ],\n            [\n                2,\n                2\n            ]\n        ],\n        color: \"#2196f3\",\n        name: \"Bottom Horizontal\"\n    },\n    // Payline 4: Diagonal from top-left to bottom-right\n    {\n        id: 4,\n        positions: [\n            [\n                0,\n                0\n            ],\n            [\n                1,\n                1\n            ],\n            [\n                2,\n                2\n            ]\n        ],\n        color: \"#ff9800\",\n        name: \"Diagonal Down\"\n    },\n    // Payline 5: Diagonal from bottom-left to top-right\n    {\n        id: 5,\n        positions: [\n            [\n                2,\n                0\n            ],\n            [\n                1,\n                1\n            ],\n            [\n                0,\n                2\n            ]\n        ],\n        color: \"#9c27b0\",\n        name: \"Diagonal Up\"\n    },\n    // Additional paylines (not used in basic game, but available for future expansion)\n    // Payline 6: First column\n    {\n        id: 6,\n        positions: [\n            [\n                0,\n                0\n            ],\n            [\n                1,\n                0\n            ],\n            [\n                2,\n                0\n            ]\n        ],\n        color: \"#00bcd4\",\n        name: \"Left Vertical\",\n        active: false // Not active in basic game\n    },\n    // Payline 7: Second column\n    {\n        id: 7,\n        positions: [\n            [\n                0,\n                1\n            ],\n            [\n                1,\n                1\n            ],\n            [\n                2,\n                1\n            ]\n        ],\n        color: \"#ffc107\",\n        name: \"Middle Vertical\",\n        active: false\n    },\n    // Payline 8: Third column\n    {\n        id: 8,\n        positions: [\n            [\n                0,\n                2\n            ],\n            [\n                1,\n                2\n            ],\n            [\n                2,\n                2\n            ]\n        ],\n        color: \"#e91e63\",\n        name: \"Right Vertical\",\n        active: false\n    },\n    // Payline 9: V-shape (bottom row and up the middle)\n    {\n        id: 9,\n        positions: [\n            [\n                2,\n                0\n            ],\n            [\n                1,\n                1\n            ],\n            [\n                2,\n                2\n            ]\n        ],\n        color: \"#8bc34a\",\n        name: \"V-Shape\",\n        active: false\n    },\n    // Payline 10: Inverted V-shape (top row and down the middle)\n    {\n        id: 10,\n        positions: [\n            [\n                0,\n                0\n            ],\n            [\n                1,\n                1\n            ],\n            [\n                0,\n                2\n            ]\n        ],\n        color: \"#ff4081\",\n        name: \"Inverted V-Shape\",\n        active: false\n    }\n];\n// Export active paylines only (for easier access)\nconst activePaylines = paylines.filter((payline)=>payline.active !== false);\n// Export a function to get a payline by ID\nconst getPaylineById = (id)=>{\n    return paylines.find((payline)=>payline.id === id);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (paylines);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uZmlnL3BheWxpbmVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSx5QkFBeUI7QUFHekI7Ozs7Ozs7OztDQVNDLEdBQ00sTUFBTUEsV0FBc0I7SUFDakMscUJBQXFCO0lBQ3JCO1FBQ0VDLElBQUk7UUFDSkMsV0FBVztZQUNUO2dCQUFDO2dCQUFHO2FBQUU7WUFBRTtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtTQUN2QjtRQUNEQyxPQUFPO1FBQ1BDLE1BQU07SUFDUjtJQUVBLHdCQUF3QjtJQUN4QjtRQUNFSCxJQUFJO1FBQ0pDLFdBQVc7WUFDVDtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtZQUFFO2dCQUFDO2dCQUFHO2FBQUU7U0FDdkI7UUFDREMsT0FBTztRQUNQQyxNQUFNO0lBQ1I7SUFFQSx3QkFBd0I7SUFDeEI7UUFDRUgsSUFBSTtRQUNKQyxXQUFXO1lBQ1Q7Z0JBQUM7Z0JBQUc7YUFBRTtZQUFFO2dCQUFDO2dCQUFHO2FBQUU7WUFBRTtnQkFBQztnQkFBRzthQUFFO1NBQ3ZCO1FBQ0RDLE9BQU87UUFDUEMsTUFBTTtJQUNSO0lBRUEsb0RBQW9EO0lBQ3BEO1FBQ0VILElBQUk7UUFDSkMsV0FBVztZQUNUO2dCQUFDO2dCQUFHO2FBQUU7WUFBRTtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtTQUN2QjtRQUNEQyxPQUFPO1FBQ1BDLE1BQU07SUFDUjtJQUVBLG9EQUFvRDtJQUNwRDtRQUNFSCxJQUFJO1FBQ0pDLFdBQVc7WUFDVDtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtZQUFFO2dCQUFDO2dCQUFHO2FBQUU7U0FDdkI7UUFDREMsT0FBTztRQUNQQyxNQUFNO0lBQ1I7SUFFQSxtRkFBbUY7SUFFbkYsMEJBQTBCO0lBQzFCO1FBQ0VILElBQUk7UUFDSkMsV0FBVztZQUNUO2dCQUFDO2dCQUFHO2FBQUU7WUFBRTtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtTQUN2QjtRQUNEQyxPQUFPO1FBQ1BDLE1BQU07UUFDTkMsUUFBUSxNQUFNLDJCQUEyQjtJQUMzQztJQUVBLDJCQUEyQjtJQUMzQjtRQUNFSixJQUFJO1FBQ0pDLFdBQVc7WUFDVDtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtZQUFFO2dCQUFDO2dCQUFHO2FBQUU7U0FDdkI7UUFDREMsT0FBTztRQUNQQyxNQUFNO1FBQ05DLFFBQVE7SUFDVjtJQUVBLDBCQUEwQjtJQUMxQjtRQUNFSixJQUFJO1FBQ0pDLFdBQVc7WUFDVDtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtZQUFFO2dCQUFDO2dCQUFHO2FBQUU7U0FDdkI7UUFDREMsT0FBTztRQUNQQyxNQUFNO1FBQ05DLFFBQVE7SUFDVjtJQUVBLG9EQUFvRDtJQUNwRDtRQUNFSixJQUFJO1FBQ0pDLFdBQVc7WUFDVDtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtZQUFFO2dCQUFDO2dCQUFHO2FBQUU7U0FDdkI7UUFDREMsT0FBTztRQUNQQyxNQUFNO1FBQ05DLFFBQVE7SUFDVjtJQUVBLDZEQUE2RDtJQUM3RDtRQUNFSixJQUFJO1FBQ0pDLFdBQVc7WUFDVDtnQkFBQztnQkFBRzthQUFFO1lBQUU7Z0JBQUM7Z0JBQUc7YUFBRTtZQUFFO2dCQUFDO2dCQUFHO2FBQUU7U0FDdkI7UUFDREMsT0FBTztRQUNQQyxNQUFNO1FBQ05DLFFBQVE7SUFDVjtDQUNELENBQUM7QUFFRixrREFBa0Q7QUFDM0MsTUFBTUMsaUJBQWlCTixTQUFTTyxNQUFNLENBQUNDLENBQUFBLFVBQVdBLFFBQVFILE1BQU0sS0FBSyxPQUFPO0FBRW5GLDJDQUEyQztBQUNwQyxNQUFNSSxpQkFBaUIsQ0FBQ1I7SUFDN0IsT0FBT0QsU0FBU1UsSUFBSSxDQUFDRixDQUFBQSxVQUFXQSxRQUFRUCxFQUFFLEtBQUtBO0FBQ2pELEVBQUU7QUFFRixpRUFBZUQsUUFBUUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25nbWktc2xvdHMvLi9zcmMvY29uZmlnL3BheWxpbmVzLnRzPzdkZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2NvbmZpZy9wYXlsaW5lcy50c1xuaW1wb3J0IHsgUGF5bGluZSB9IGZyb20gJy4uL3R5cGVzL2dhbWUnO1xuXG4vKipcbiAqIFBheWxpbmUgZGVmaW5pdGlvbiBmb3IgdGhlIDN4MyBzbG90IG1hY2hpbmVcbiAqIFxuICogVGhlIHBvc2l0aW9uIGZvcm1hdCBpcyBbcm93LCBjb2x1bW5dIHdpdGggMC1pbmRleGVkIHZhbHVlczpcbiAqIFswLDBdIFswLDFdIFswLDJdXG4gKiBbMSwwXSBbMSwxXSBbMSwyXVxuICogWzIsMF0gWzIsMV0gWzIsMl1cbiAqIFxuICogRWFjaCBwYXlsaW5lIGNvbnNpc3RzIG9mIDMgcG9zaXRpb25zIHRvIGZvcm0gYSB3aW5uaW5nIHBhdHRlcm5cbiAqL1xuZXhwb3J0IGNvbnN0IHBheWxpbmVzOiBQYXlsaW5lW10gPSBbXG4gIC8vIFBheWxpbmUgMTogVG9wIHJvd1xuICB7XG4gICAgaWQ6IDEsXG4gICAgcG9zaXRpb25zOiBbXG4gICAgICBbMCwgMF0sIFswLCAxXSwgWzAsIDJdXG4gICAgXSxcbiAgICBjb2xvcjogJyNmZjUyNTInLCAvLyBSZWRcbiAgICBuYW1lOiAnVG9wIEhvcml6b250YWwnXG4gIH0sXG4gIFxuICAvLyBQYXlsaW5lIDI6IE1pZGRsZSByb3dcbiAge1xuICAgIGlkOiAyLFxuICAgIHBvc2l0aW9uczogW1xuICAgICAgWzEsIDBdLCBbMSwgMV0sIFsxLCAyXVxuICAgIF0sXG4gICAgY29sb3I6ICcjNGNhZjUwJywgLy8gR3JlZW5cbiAgICBuYW1lOiAnTWlkZGxlIEhvcml6b250YWwnXG4gIH0sXG4gIFxuICAvLyBQYXlsaW5lIDM6IEJvdHRvbSByb3dcbiAge1xuICAgIGlkOiAzLFxuICAgIHBvc2l0aW9uczogW1xuICAgICAgWzIsIDBdLCBbMiwgMV0sIFsyLCAyXVxuICAgIF0sXG4gICAgY29sb3I6ICcjMjE5NmYzJywgLy8gQmx1ZVxuICAgIG5hbWU6ICdCb3R0b20gSG9yaXpvbnRhbCdcbiAgfSxcbiAgXG4gIC8vIFBheWxpbmUgNDogRGlhZ29uYWwgZnJvbSB0b3AtbGVmdCB0byBib3R0b20tcmlnaHRcbiAge1xuICAgIGlkOiA0LFxuICAgIHBvc2l0aW9uczogW1xuICAgICAgWzAsIDBdLCBbMSwgMV0sIFsyLCAyXVxuICAgIF0sXG4gICAgY29sb3I6ICcjZmY5ODAwJywgLy8gT3JhbmdlXG4gICAgbmFtZTogJ0RpYWdvbmFsIERvd24nXG4gIH0sXG4gIFxuICAvLyBQYXlsaW5lIDU6IERpYWdvbmFsIGZyb20gYm90dG9tLWxlZnQgdG8gdG9wLXJpZ2h0XG4gIHtcbiAgICBpZDogNSxcbiAgICBwb3NpdGlvbnM6IFtcbiAgICAgIFsyLCAwXSwgWzEsIDFdLCBbMCwgMl1cbiAgICBdLFxuICAgIGNvbG9yOiAnIzljMjdiMCcsIC8vIFB1cnBsZVxuICAgIG5hbWU6ICdEaWFnb25hbCBVcCdcbiAgfSxcbiAgXG4gIC8vIEFkZGl0aW9uYWwgcGF5bGluZXMgKG5vdCB1c2VkIGluIGJhc2ljIGdhbWUsIGJ1dCBhdmFpbGFibGUgZm9yIGZ1dHVyZSBleHBhbnNpb24pXG4gIFxuICAvLyBQYXlsaW5lIDY6IEZpcnN0IGNvbHVtblxuICB7XG4gICAgaWQ6IDYsXG4gICAgcG9zaXRpb25zOiBbXG4gICAgICBbMCwgMF0sIFsxLCAwXSwgWzIsIDBdXG4gICAgXSxcbiAgICBjb2xvcjogJyMwMGJjZDQnLCAvLyBDeWFuXG4gICAgbmFtZTogJ0xlZnQgVmVydGljYWwnLFxuICAgIGFjdGl2ZTogZmFsc2UgLy8gTm90IGFjdGl2ZSBpbiBiYXNpYyBnYW1lXG4gIH0sXG4gIFxuICAvLyBQYXlsaW5lIDc6IFNlY29uZCBjb2x1bW5cbiAge1xuICAgIGlkOiA3LFxuICAgIHBvc2l0aW9uczogW1xuICAgICAgWzAsIDFdLCBbMSwgMV0sIFsyLCAxXVxuICAgIF0sXG4gICAgY29sb3I6ICcjZmZjMTA3JywgLy8gQW1iZXJcbiAgICBuYW1lOiAnTWlkZGxlIFZlcnRpY2FsJyxcbiAgICBhY3RpdmU6IGZhbHNlXG4gIH0sXG4gIFxuICAvLyBQYXlsaW5lIDg6IFRoaXJkIGNvbHVtblxuICB7XG4gICAgaWQ6IDgsXG4gICAgcG9zaXRpb25zOiBbXG4gICAgICBbMCwgMl0sIFsxLCAyXSwgWzIsIDJdXG4gICAgXSxcbiAgICBjb2xvcjogJyNlOTFlNjMnLCAvLyBQaW5rXG4gICAgbmFtZTogJ1JpZ2h0IFZlcnRpY2FsJyxcbiAgICBhY3RpdmU6IGZhbHNlXG4gIH0sXG4gIFxuICAvLyBQYXlsaW5lIDk6IFYtc2hhcGUgKGJvdHRvbSByb3cgYW5kIHVwIHRoZSBtaWRkbGUpXG4gIHtcbiAgICBpZDogOSxcbiAgICBwb3NpdGlvbnM6IFtcbiAgICAgIFsyLCAwXSwgWzEsIDFdLCBbMiwgMl1cbiAgICBdLFxuICAgIGNvbG9yOiAnIzhiYzM0YScsIC8vIExpZ2h0IEdyZWVuXG4gICAgbmFtZTogJ1YtU2hhcGUnLFxuICAgIGFjdGl2ZTogZmFsc2VcbiAgfSxcbiAgXG4gIC8vIFBheWxpbmUgMTA6IEludmVydGVkIFYtc2hhcGUgKHRvcCByb3cgYW5kIGRvd24gdGhlIG1pZGRsZSlcbiAge1xuICAgIGlkOiAxMCxcbiAgICBwb3NpdGlvbnM6IFtcbiAgICAgIFswLCAwXSwgWzEsIDFdLCBbMCwgMl1cbiAgICBdLFxuICAgIGNvbG9yOiAnI2ZmNDA4MScsIC8vIFBpbmsgQWNjZW50XG4gICAgbmFtZTogJ0ludmVydGVkIFYtU2hhcGUnLFxuICAgIGFjdGl2ZTogZmFsc2VcbiAgfVxuXTtcblxuLy8gRXhwb3J0IGFjdGl2ZSBwYXlsaW5lcyBvbmx5IChmb3IgZWFzaWVyIGFjY2VzcylcbmV4cG9ydCBjb25zdCBhY3RpdmVQYXlsaW5lcyA9IHBheWxpbmVzLmZpbHRlcihwYXlsaW5lID0+IHBheWxpbmUuYWN0aXZlICE9PSBmYWxzZSk7XG5cbi8vIEV4cG9ydCBhIGZ1bmN0aW9uIHRvIGdldCBhIHBheWxpbmUgYnkgSURcbmV4cG9ydCBjb25zdCBnZXRQYXlsaW5lQnlJZCA9IChpZDogbnVtYmVyKTogUGF5bGluZSB8IHVuZGVmaW5lZCA9PiB7XG4gIHJldHVybiBwYXlsaW5lcy5maW5kKHBheWxpbmUgPT4gcGF5bGluZS5pZCA9PT0gaWQpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgcGF5bGluZXM7Il0sIm5hbWVzIjpbInBheWxpbmVzIiwiaWQiLCJwb3NpdGlvbnMiLCJjb2xvciIsIm5hbWUiLCJhY3RpdmUiLCJhY3RpdmVQYXlsaW5lcyIsImZpbHRlciIsInBheWxpbmUiLCJnZXRQYXlsaW5lQnlJZCIsImZpbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/config/paylines.ts\n");

/***/ }),

/***/ "./src/context/GameContext.tsx":
/*!*************************************!*\
  !*** ./src/context/GameContext.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GameProvider: () => (/* binding */ GameProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useGameContext: () => (/* binding */ useGameContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useSlotMachine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useSlotMachine */ \"./src/hooks/useSlotMachine.ts\");\n// src/context/GameContext.tsx\n\n\n\nconst defaultSettings = {\n    soundEnabled: true,\n    musicEnabled: true,\n    fastMode: false,\n    autoSpin: false,\n    showWinAnimations: true\n};\nconst GameContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst GameProvider = ({ children })=>{\n    // Get slot machine state from hook\n    const slotMachine = (0,_hooks_useSlotMachine__WEBPACK_IMPORTED_MODULE_2__.useSlotMachine)();\n    // Settings state\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultSettings);\n    // Modal state\n    const [showPaytable, setShowPaytable] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showSettings, setShowSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Game history state\n    const [gameHistory, setGameHistory] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // Load settings from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const savedSettings = localStorage.getItem(\"tngmiSlotSettings\");\n        if (savedSettings) {\n            try {\n                const parsedSettings = JSON.parse(savedSettings);\n                setSettings((prevSettings)=>({\n                        ...prevSettings,\n                        ...parsedSettings\n                    }));\n            } catch (error) {\n                console.error(\"Failed to parse saved settings:\", error);\n            }\n        }\n        // Load game history\n        const savedHistory = localStorage.getItem(\"tngmiGameHistory\");\n        if (savedHistory) {\n            try {\n                const parsedHistory = JSON.parse(savedHistory);\n                setGameHistory(parsedHistory);\n            } catch (error) {\n                console.error(\"Failed to parse saved history:\", error);\n            }\n        }\n    }, []);\n    // Update settings\n    const updateSettings = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((newSettings)=>{\n        setSettings((prevSettings)=>{\n            const updatedSettings = {\n                ...prevSettings,\n                ...newSettings\n            };\n            // Save to localStorage\n            localStorage.setItem(\"tngmiSlotSettings\", JSON.stringify(updatedSettings));\n            return updatedSettings;\n        });\n    }, []);\n    // Add game result to history\n    const addToHistory = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((gameResult)=>{\n        setGameHistory((prevHistory)=>{\n            const newHistory = [\n                {\n                    ...gameResult,\n                    timestamp: Date.now()\n                },\n                ...prevHistory.slice(0, 49)\n            ];\n            // Save to localStorage\n            localStorage.setItem(\"tngmiGameHistory\", JSON.stringify(newHistory));\n            return newHistory;\n        });\n    }, []);\n    // Clear game history\n    const clearHistory = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        setGameHistory([]);\n        localStorage.removeItem(\"tngmiGameHistory\");\n    }, []);\n    // Store game result in history when a spin completes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (slotMachine.isWinner && !slotMachine.spinning && slotMachine.winAmount > 0) {\n            addToHistory({\n                betAmount: slotMachine.betAmount,\n                winAmount: slotMachine.winAmount,\n                multiplier: slotMachine.multiplier,\n                reels: slotMachine.reels,\n                activePaylines: slotMachine.activePaylines\n            });\n        }\n    }, [\n        slotMachine.isWinner,\n        slotMachine.spinning,\n        slotMachine.winAmount,\n        slotMachine.betAmount,\n        slotMachine.multiplier,\n        slotMachine.reels,\n        slotMachine.activePaylines,\n        addToHistory\n    ]);\n    const contextValue = {\n        ...slotMachine,\n        settings,\n        updateSettings,\n        showPaytable,\n        setShowPaytable,\n        showSettings,\n        setShowSettings,\n        gameHistory,\n        addToHistory,\n        clearHistory\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(GameContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/cannedoxygen/Downloads/ngmi_slots/src/context/GameContext.tsx\",\n        lineNumber: 167,\n        columnNumber: 5\n    }, undefined);\n};\nconst useGameContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(GameContext);\n    if (context === undefined) {\n        throw new Error(\"useGameContext must be used within a GameProvider\");\n    }\n    return context;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GameContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/context/GameContext.tsx\n");

/***/ }),

/***/ "./src/context/SuiWalletContext.tsx":
/*!******************************************!*\
  !*** ./src/context/SuiWalletContext.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SuiWalletProvider: () => (/* binding */ SuiWalletProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useSuiWalletContext: () => (/* binding */ useSuiWalletContext)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hooks_useSuiWallet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useSuiWallet */ \"./src/hooks/useSuiWallet.ts\");\n/* harmony import */ var _hooks_useTokenBalance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../hooks/useTokenBalance */ \"./src/hooks/useTokenBalance.ts\");\n// src/context/SuiWalletContext.tsx\n\n\n\n\nconst SuiWalletContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst SuiWalletProvider = ({ children })=>{\n    // Get wallet connection state from hook\n    const { connected, connecting, address, provider, walletProviders, error, connect, disconnect, executeTransaction } = (0,_hooks_useSuiWallet__WEBPACK_IMPORTED_MODULE_2__.useSuiWallet)();\n    // Get balance state from hook\n    const { balance, loading: balanceLoading, error: balanceError, refetch: refetchBalance } = (0,_hooks_useTokenBalance__WEBPACK_IMPORTED_MODULE_3__.useTokenBalance)();\n    const contextValue = {\n        connected,\n        connecting,\n        address,\n        provider,\n        walletProviders,\n        error,\n        balance,\n        balanceLoading,\n        balanceError,\n        connect,\n        disconnect,\n        executeTransaction,\n        refetchBalance\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SuiWalletContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/cannedoxygen/Downloads/ngmi_slots/src/context/SuiWalletContext.tsx\",\n        lineNumber: 69,\n        columnNumber: 5\n    }, undefined);\n};\nconst useSuiWalletContext = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SuiWalletContext);\n    if (context === undefined) {\n        throw new Error(\"useSuiWalletContext must be used within a SuiWalletProvider\");\n    }\n    return context;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SuiWalletContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dC9TdWlXYWxsZXRDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxtQ0FBbUM7O0FBQ2lDO0FBQ2Y7QUFDTTtBQXdCM0QsTUFBTUssaUNBQW1CSixvREFBYUEsQ0FBb0NLO0FBRW5FLE1BQU1DLG9CQUF1RCxDQUFDLEVBQUVDLFFBQVEsRUFBRTtJQUMvRSx3Q0FBd0M7SUFDeEMsTUFBTSxFQUNKQyxTQUFTLEVBQ1RDLFVBQVUsRUFDVkMsT0FBTyxFQUNQQyxRQUFRLEVBQ1JDLGVBQWUsRUFDZkMsS0FBSyxFQUNMQyxPQUFPLEVBQ1BDLFVBQVUsRUFDVkMsa0JBQWtCLEVBQ25CLEdBQUdkLGlFQUFZQTtJQUVoQiw4QkFBOEI7SUFDOUIsTUFBTSxFQUNKZSxPQUFPLEVBQ1BDLFNBQVNDLGNBQWMsRUFDdkJOLE9BQU9PLFlBQVksRUFDbkJDLFNBQVNDLGNBQWMsRUFDeEIsR0FBR25CLHVFQUFlQTtJQUVuQixNQUFNb0IsZUFBc0M7UUFDMUNmO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBQ0FJO1FBQ0FFO1FBQ0FDO1FBQ0FOO1FBQ0FDO1FBQ0FDO1FBQ0FNO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ2xCLGlCQUFpQm9CLFFBQVE7UUFBQ0MsT0FBT0Y7a0JBQy9CaEI7Ozs7OztBQUdQLEVBQUU7QUFFSyxNQUFNbUIsc0JBQXNCO0lBQ2pDLE1BQU1DLFVBQVUxQixpREFBVUEsQ0FBQ0c7SUFDM0IsSUFBSXVCLFlBQVl0QixXQUFXO1FBQ3pCLE1BQU0sSUFBSXVCLE1BQU07SUFDbEI7SUFDQSxPQUFPRDtBQUNULEVBQUU7QUFFRixpRUFBZXZCLGdCQUFnQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25nbWktc2xvdHMvLi9zcmMvY29udGV4dC9TdWlXYWxsZXRDb250ZXh0LnRzeD80YzJkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb250ZXh0L1N1aVdhbGxldENvbnRleHQudHN4XG5pbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU3VpV2FsbGV0IH0gZnJvbSAnLi4vaG9va3MvdXNlU3VpV2FsbGV0JztcbmltcG9ydCB7IHVzZVRva2VuQmFsYW5jZSB9IGZyb20gJy4uL2hvb2tzL3VzZVRva2VuQmFsYW5jZSc7XG5pbXBvcnQgeyBTdWlXYWxsZXRQcm92aWRlciB9IGZyb20gJy4uL3R5cGVzL3N1aSc7XG5cbmludGVyZmFjZSBTdWlXYWxsZXRDb250ZXh0VmFsdWUge1xuICAvLyBXYWxsZXQgY29ubmVjdGlvbiBzdGF0ZVxuICBjb25uZWN0ZWQ6IGJvb2xlYW47XG4gIGNvbm5lY3Rpbmc6IGJvb2xlYW47XG4gIGFkZHJlc3M6IHN0cmluZyB8IG51bGw7XG4gIHByb3ZpZGVyOiBTdWlXYWxsZXRQcm92aWRlciB8IG51bGw7XG4gIHdhbGxldFByb3ZpZGVyczogU3VpV2FsbGV0UHJvdmlkZXJbXTtcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7XG4gIFxuICAvLyBCYWxhbmNlIHN0YXRlXG4gIGJhbGFuY2U6IG51bWJlcjtcbiAgYmFsYW5jZUxvYWRpbmc6IGJvb2xlYW47XG4gIGJhbGFuY2VFcnJvcjogc3RyaW5nIHwgbnVsbDtcbiAgXG4gIC8vIEZ1bmN0aW9uc1xuICBjb25uZWN0OiAocHJvdmlkZXJJZDogc3RyaW5nKSA9PiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgYWRkcmVzcz86IHN0cmluZzsgZXJyb3I/OiBzdHJpbmcgfT47XG4gIGRpc2Nvbm5lY3Q6ICgpID0+IFByb21pc2U8eyBzdWNjZXNzOiBib29sZWFuOyBlcnJvcj86IHN0cmluZyB9PjtcbiAgZXhlY3V0ZVRyYW5zYWN0aW9uOiAodHJhbnNhY3Rpb246IGFueSkgPT4gUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IHRyYW5zYWN0aW9uSWQ/OiBzdHJpbmc7IGVycm9yPzogc3RyaW5nIH0+O1xuICByZWZldGNoQmFsYW5jZTogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbn1cblxuY29uc3QgU3VpV2FsbGV0Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8U3VpV2FsbGV0Q29udGV4dFZhbHVlIHwgdW5kZWZpbmVkPih1bmRlZmluZWQpO1xuXG5leHBvcnQgY29uc3QgU3VpV2FsbGV0UHJvdmlkZXI6IFJlYWN0LkZDPHsgY2hpbGRyZW46IFJlYWN0Tm9kZSB9PiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgLy8gR2V0IHdhbGxldCBjb25uZWN0aW9uIHN0YXRlIGZyb20gaG9va1xuICBjb25zdCB7IFxuICAgIGNvbm5lY3RlZCxcbiAgICBjb25uZWN0aW5nLFxuICAgIGFkZHJlc3MsXG4gICAgcHJvdmlkZXIsXG4gICAgd2FsbGV0UHJvdmlkZXJzLFxuICAgIGVycm9yLFxuICAgIGNvbm5lY3QsXG4gICAgZGlzY29ubmVjdCxcbiAgICBleGVjdXRlVHJhbnNhY3Rpb25cbiAgfSA9IHVzZVN1aVdhbGxldCgpO1xuICBcbiAgLy8gR2V0IGJhbGFuY2Ugc3RhdGUgZnJvbSBob29rXG4gIGNvbnN0IHtcbiAgICBiYWxhbmNlLFxuICAgIGxvYWRpbmc6IGJhbGFuY2VMb2FkaW5nLFxuICAgIGVycm9yOiBiYWxhbmNlRXJyb3IsXG4gICAgcmVmZXRjaDogcmVmZXRjaEJhbGFuY2VcbiAgfSA9IHVzZVRva2VuQmFsYW5jZSgpO1xuICBcbiAgY29uc3QgY29udGV4dFZhbHVlOiBTdWlXYWxsZXRDb250ZXh0VmFsdWUgPSB7XG4gICAgY29ubmVjdGVkLFxuICAgIGNvbm5lY3RpbmcsXG4gICAgYWRkcmVzcyxcbiAgICBwcm92aWRlcixcbiAgICB3YWxsZXRQcm92aWRlcnMsXG4gICAgZXJyb3IsXG4gICAgYmFsYW5jZSxcbiAgICBiYWxhbmNlTG9hZGluZyxcbiAgICBiYWxhbmNlRXJyb3IsXG4gICAgY29ubmVjdCxcbiAgICBkaXNjb25uZWN0LFxuICAgIGV4ZWN1dGVUcmFuc2FjdGlvbixcbiAgICByZWZldGNoQmFsYW5jZVxuICB9O1xuICBcbiAgcmV0dXJuIChcbiAgICA8U3VpV2FsbGV0Q29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dFZhbHVlfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1N1aVdhbGxldENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgdXNlU3VpV2FsbGV0Q29udGV4dCA9ICgpOiBTdWlXYWxsZXRDb250ZXh0VmFsdWUgPT4ge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChTdWlXYWxsZXRDb250ZXh0KTtcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndXNlU3VpV2FsbGV0Q29udGV4dCBtdXN0IGJlIHVzZWQgd2l0aGluIGEgU3VpV2FsbGV0UHJvdmlkZXInKTtcbiAgfVxuICByZXR1cm4gY29udGV4dDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFN1aVdhbGxldENvbnRleHQ7Il0sIm5hbWVzIjpbIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsInVzZUNvbnRleHQiLCJ1c2VTdWlXYWxsZXQiLCJ1c2VUb2tlbkJhbGFuY2UiLCJTdWlXYWxsZXRDb250ZXh0IiwidW5kZWZpbmVkIiwiU3VpV2FsbGV0UHJvdmlkZXIiLCJjaGlsZHJlbiIsImNvbm5lY3RlZCIsImNvbm5lY3RpbmciLCJhZGRyZXNzIiwicHJvdmlkZXIiLCJ3YWxsZXRQcm92aWRlcnMiLCJlcnJvciIsImNvbm5lY3QiLCJkaXNjb25uZWN0IiwiZXhlY3V0ZVRyYW5zYWN0aW9uIiwiYmFsYW5jZSIsImxvYWRpbmciLCJiYWxhbmNlTG9hZGluZyIsImJhbGFuY2VFcnJvciIsInJlZmV0Y2giLCJyZWZldGNoQmFsYW5jZSIsImNvbnRleHRWYWx1ZSIsIlByb3ZpZGVyIiwidmFsdWUiLCJ1c2VTdWlXYWxsZXRDb250ZXh0IiwiY29udGV4dCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/context/SuiWalletContext.tsx\n");

/***/ }),

/***/ "./src/hooks/useMoveCall.ts":
/*!**********************************!*\
  !*** ./src/hooks/useMoveCall.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useMoveCall: () => (/* binding */ useMoveCall)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useSuiWallet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useSuiWallet */ \"./src/hooks/useSuiWallet.ts\");\n// src/hooks/useMoveCall.ts\n\n\nconst useMoveCall = ()=>{\n    const { connected, executeTransaction } = (0,_useSuiWallet__WEBPACK_IMPORTED_MODULE_1__.useSuiWallet)();\n    const [pendingTransaction, setPendingTransaction] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [lastResult, setLastResult] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const callMoveFunction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (params)=>{\n        if (!connected) {\n            return {\n                status: \"error\",\n                error: \"Wallet not connected\"\n            };\n        }\n        try {\n            setPendingTransaction(true);\n            // In a real implementation, this would construct and send a transaction\n            // to call the specified Move function on the blockchain\n            // For now, we'll simulate a response\n            // Simulate network delay\n            await new Promise((resolve)=>setTimeout(resolve, 2000));\n            // Generate a mock transaction result\n            const isSuccess = Math.random() > 0.1; // 90% success rate for simulation\n            let result;\n            if (isSuccess) {\n                // Successful transaction\n                result = {\n                    status: \"success\",\n                    transactionId: `0x${Math.random().toString(16).substring(2, 42)}`,\n                    data: simulateMoveResult(params)\n                };\n            } else {\n                // Failed transaction\n                result = {\n                    status: \"error\",\n                    error: \"Transaction execution failed\"\n                };\n            }\n            setLastResult(result);\n            return result;\n        } catch (error) {\n            const errorResult = {\n                status: \"error\",\n                error: error.message || \"Unknown error occurred\"\n            };\n            setLastResult(errorResult);\n            return errorResult;\n        } finally{\n            setPendingTransaction(false);\n        }\n    }, [\n        connected,\n        executeTransaction\n    ]);\n    // Function to generate simulated results based on the called function\n    const simulateMoveResult = (params)=>{\n        const { module, function: func } = params;\n        // For the slot machine game\n        if (module === \"ngmi_slots\" && func === \"spin\") {\n            // Generate a simulated spin result\n            const reelPositions = generateRandomReelPositions();\n            const winAmount = calculateWinAmount(reelPositions, params.arguments?.[0] || 10);\n            return {\n                reelPositions,\n                winAmount: winAmount.amount,\n                multiplier: winAmount.multiplier,\n                freeSpins: winAmount.freeSpins\n            };\n        }\n        // Default response for other functions\n        return {\n            success: true\n        };\n    };\n    // Helper function to generate random reel positions\n    const generateRandomReelPositions = ()=>{\n        const symbolTypes = [\n            \"low-gear\",\n            \"low-token\",\n            \"low-badge\",\n            \"mid-robot\",\n            \"mid-helmet\",\n            \"mid-future\",\n            \"high-tardi\",\n            \"multiplier-2x\",\n            \"free-spin\"\n        ];\n        const reels = [];\n        for(let i = 0; i < 3; i++){\n            const reel = [];\n            for(let j = 0; j < 3; j++){\n                const randomIndex = Math.floor(Math.random() * symbolTypes.length);\n                reel.push(symbolTypes[randomIndex]);\n            }\n            reels.push(reel);\n        }\n        return reels;\n    };\n    // Helper function to calculate win amount\n    const calculateWinAmount = (reels, betAmount)=>{\n        // This is a simplified version - in production, this would be\n        // calculated on the blockchain by the Move contract\n        // Check for a win pattern (simplified for demo)\n        const hasWin = Math.random() > 0.6; // 40% win rate\n        if (!hasWin) {\n            return {\n                amount: 0,\n                multiplier: 1,\n                freeSpins: 0\n            };\n        }\n        // Determine multiplier (if any)\n        const hasMultiplier = Math.random() > 0.7; // 30% chance of multiplier\n        const multiplier = hasMultiplier ? Math.random() > 0.5 ? 2 : 5 : 1;\n        // Determine win amount\n        const baseAmount = betAmount * (Math.floor(Math.random() * 5) + 1);\n        const finalAmount = baseAmount * multiplier;\n        // Determine free spins (if any)\n        const hasFreeSpins = Math.random() > 0.8; // 20% chance of free spins\n        const freeSpins = hasFreeSpins ? Math.floor(Math.random() * 3) + 1 : 0;\n        return {\n            amount: finalAmount,\n            multiplier,\n            freeSpins\n        };\n    };\n    return {\n        callMoveFunction,\n        pendingTransaction,\n        lastResult\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useMoveCall);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useMoveCall.ts\n");

/***/ }),

/***/ "./src/hooks/useSlotMachine.ts":
/*!*************************************!*\
  !*** ./src/hooks/useSlotMachine.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useSlotMachine: () => (/* binding */ useSlotMachine)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useSuiWallet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useSuiWallet */ \"./src/hooks/useSuiWallet.ts\");\n/* harmony import */ var _useMoveCall__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useMoveCall */ \"./src/hooks/useMoveCall.ts\");\n/* harmony import */ var _useTokenBalance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useTokenBalance */ \"./src/hooks/useTokenBalance.ts\");\n/* harmony import */ var _config_gameConfig__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/gameConfig */ \"./src/config/gameConfig.ts\");\n/* harmony import */ var _config_paylines__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../config/paylines */ \"./src/config/paylines.ts\");\n/* harmony import */ var _utils_gameLogic__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/gameLogic */ \"./src/utils/gameLogic.ts\");\n/* harmony import */ var _utils_randomGenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/randomGenerator */ \"./src/utils/randomGenerator.ts\");\n// src/hooks/useSlotMachine.ts\n\n\n\n\n\n\n\n\nconst useSlotMachine = ()=>{\n    // Game state\n    const [spinning, setSpinning] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [betAmount, setBetAmount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(10);\n    const [reels, setReels] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getInitialReels());\n    const [lastSpinResult, setLastSpinResult] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [winAmount, setWinAmount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [multiplier, setMultiplier] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);\n    const [activePaylines, setActivePaylines] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [freeSpinsRemaining, setFreeSpinsRemaining] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [transactionId, setTransactionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [showTransactionModal, setShowTransactionModal] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Hooks\n    const { connected, address } = (0,_useSuiWallet__WEBPACK_IMPORTED_MODULE_1__.useSuiWallet)();\n    const { callMoveFunction, pendingTransaction } = (0,_useMoveCall__WEBPACK_IMPORTED_MODULE_2__.useMoveCall)();\n    const { balance, refetch: refetchBalance } = (0,_useTokenBalance__WEBPACK_IMPORTED_MODULE_3__.useTokenBalance)();\n    // Helper function to generate initial reels\n    function getInitialReels() {\n        const symbolKeys = Object.keys(_config_gameConfig__WEBPACK_IMPORTED_MODULE_4__.gameConfig.symbols);\n        const initialReels = [];\n        for(let i = 0; i < 3; i++){\n            const reel = [];\n            for(let j = 0; j < 3; j++){\n                // Pick random symbols for initial state\n                const randomIndex = Math.floor(Math.random() * symbolKeys.length);\n                reel.push(symbolKeys[randomIndex]);\n            }\n            initialReels.push(reel);\n        }\n        return initialReels;\n    }\n    // Reset game state\n    const resetGameState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setWinAmount(0);\n        setMultiplier(1);\n        setActivePaylines([]);\n        setError(null);\n    }, []);\n    // Update UI when spin result changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (lastSpinResult) {\n            const { reelPositions, winAmount, multiplier, winningPaylines, freeSpinsAwarded } = lastSpinResult;\n            setReels(reelPositions);\n            setWinAmount(winAmount);\n            setMultiplier(multiplier);\n            setActivePaylines(winningPaylines);\n            if (freeSpinsAwarded > 0) {\n                setFreeSpinsRemaining((prev)=>prev + freeSpinsAwarded);\n            }\n        }\n    }, [\n        lastSpinResult\n    ]);\n    // Spin function\n    const spin = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (spinning || !connected || pendingTransaction) return;\n        // Check if player has enough balance\n        if (balance < betAmount && freeSpinsRemaining <= 0) {\n            setError(\"Insufficient balance\");\n            return;\n        }\n        try {\n            setSpinning(true);\n            resetGameState();\n            // Use free spin if available\n            const usingFreeSpin = freeSpinsRemaining > 0;\n            if (usingFreeSpin) {\n                setFreeSpinsRemaining((prev)=>prev - 1);\n            }\n            // For development, we'll simulate a blockchain call\n            // In production, this would call the actual smart contract\n            if ( true && process.env.NEXT_PUBLIC_MOCK_BLOCKCHAIN === \"true\") {\n                await simulateBlockchainSpin();\n            } else {\n                // Generate a random seed for the spin\n                const seed = (0,_utils_randomGenerator__WEBPACK_IMPORTED_MODULE_7__.generateRandomSeed)();\n                // Call the Move contract's spin function\n                const result = await callMoveFunction({\n                    packageId: _config_gameConfig__WEBPACK_IMPORTED_MODULE_4__.gameConfig.contractAddress.packageId,\n                    module: \"ngmi_slots\",\n                    function: \"spin\",\n                    arguments: [\n                        betAmount,\n                        seed\n                    ],\n                    gasBudget: 10000\n                });\n                if (result.status === \"success\") {\n                    setTransactionId(result.transactionId);\n                    setShowTransactionModal(true);\n                    // Process the result - in a real app, you'd wait for transaction confirmation\n                    // and then fetch the events from the blockchain\n                    // For now, we'll just refetch the balance after a delay\n                    setTimeout(()=>{\n                        refetchBalance();\n                    }, 3000);\n                } else {\n                    throw new Error(result.error || \"Transaction failed\");\n                }\n            }\n        } catch (err) {\n            setError(err.message || \"Failed to spin\");\n            console.error(\"Spin error:\", err);\n        } finally{\n            // In a real app, you would set spinning to false after the transaction is confirmed\n            // For development, we'll just use a timeout\n            setTimeout(()=>{\n                setSpinning(false);\n            }, 3000);\n        }\n    }, [\n        spinning,\n        connected,\n        pendingTransaction,\n        balance,\n        betAmount,\n        freeSpinsRemaining,\n        resetGameState,\n        callMoveFunction,\n        refetchBalance\n    ]);\n    // Simulate a blockchain spin for development\n    const simulateBlockchainSpin = async ()=>{\n        return new Promise((resolve)=>{\n            setTimeout(()=>{\n                // Simulate random reel positions\n                const reelPositions = getRandomReelPositions();\n                // Evaluate win based on the random positions\n                const result = (0,_utils_gameLogic__WEBPACK_IMPORTED_MODULE_6__.evaluateWin)(reelPositions, betAmount, _config_paylines__WEBPACK_IMPORTED_MODULE_5__.paylines);\n                setLastSpinResult({\n                    reelPositions,\n                    winAmount: result.totalWin,\n                    multiplier: result.multiplier,\n                    winningPaylines: result.winningPaylines,\n                    freeSpinsAwarded: result.freeSpins\n                });\n                resolve();\n            }, 2000); // Simulate blockchain delay\n        });\n    };\n    // Generate random reel positions\n    const getRandomReelPositions = ()=>{\n        const symbolKeys = Object.keys(_config_gameConfig__WEBPACK_IMPORTED_MODULE_4__.gameConfig.symbols);\n        const reelPositions = [];\n        for(let i = 0; i < 3; i++){\n            const reel = [];\n            for(let j = 0; j < 3; j++){\n                // Weighted random selection based on symbol probabilities\n                let random = Math.random();\n                let selectedSymbol = symbolKeys[0];\n                for (const symbol of symbolKeys){\n                    const probability = _config_gameConfig__WEBPACK_IMPORTED_MODULE_4__.gameConfig.symbols[symbol].probability;\n                    if (random <= probability) {\n                        selectedSymbol = symbol;\n                        break;\n                    }\n                    random -= probability;\n                }\n                reel.push(selectedSymbol);\n            }\n            reelPositions.push(reel);\n        }\n        return reelPositions;\n    };\n    return {\n        spinning,\n        betAmount,\n        setBetAmount,\n        reels,\n        winAmount,\n        multiplier,\n        activePaylines,\n        freeSpinsRemaining,\n        spin,\n        error,\n        symbols: _config_gameConfig__WEBPACK_IMPORTED_MODULE_4__.gameConfig.symbols,\n        paylines: _config_paylines__WEBPACK_IMPORTED_MODULE_5__.paylines,\n        transactionId,\n        showTransactionModal,\n        setShowTransactionModal,\n        isWinner: winAmount > 0,\n        canPlay: connected && (balance >= betAmount || freeSpinsRemaining > 0)\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useSlotMachine);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useSlotMachine.ts\n");

/***/ }),

/***/ "./src/hooks/useSuiWallet.ts":
/*!***********************************!*\
  !*** ./src/hooks/useSuiWallet.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useSuiWallet: () => (/* binding */ useSuiWallet)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// src/hooks/useSuiWallet.ts\n\nconst useSuiWallet = ()=>{\n    const [address, setAddress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [connected, setConnected] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [connecting, setConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [provider, setProvider] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [walletProviders, setWalletProviders] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Initialize wallet providers\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // This would typically detect available wallet providers\n        // For now we'll use mock data\n        const mockProviders = [\n            {\n                id: \"sui-wallet\",\n                name: \"Sui Wallet\",\n                icon: \"/assets/images/wallets/sui-wallet.png\",\n                adapter: {}\n            },\n            {\n                id: \"ethos\",\n                name: \"Ethos Wallet\",\n                icon: \"/assets/images/wallets/ethos-wallet.png\",\n                adapter: {}\n            },\n            {\n                id: \"suiet\",\n                name: \"Suiet Wallet\",\n                icon: \"/assets/images/wallets/suiet-wallet.png\",\n                adapter: {}\n            }\n        ];\n        setWalletProviders(mockProviders);\n    }, []);\n    // Check if the wallet is already connected\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const checkConnection = async ()=>{\n            try {\n                // In a real implementation, this would check if the wallet is already connected\n                const savedWalletId = localStorage.getItem(\"connectedWalletId\");\n                const savedAddress = localStorage.getItem(\"walletAddress\");\n                if (savedWalletId && savedAddress) {\n                    const provider = walletProviders.find((p)=>p.id === savedWalletId);\n                    if (provider) {\n                        setProvider(provider);\n                        setAddress(savedAddress);\n                        setConnected(true);\n                    }\n                }\n            } catch (err) {\n                console.error(\"Failed to check wallet connection:\", err);\n            }\n        };\n        if (walletProviders.length > 0) {\n            checkConnection();\n        }\n    }, [\n        walletProviders\n    ]);\n    // Connect to a wallet\n    const connect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (providerId)=>{\n        try {\n            setConnecting(true);\n            setError(null);\n            const provider = walletProviders.find((p)=>p.id === providerId);\n            if (!provider) {\n                throw new Error(\"Wallet provider not found\");\n            }\n            // In a real implementation, this would connect to the actual wallet\n            // For now, we'll simulate a connection\n            // Simulate connection delay\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            // Generate a fake address\n            const mockAddress = `0x${Math.random().toString(16).substring(2, 42)}`;\n            // Save to state and localStorage\n            setProvider(provider);\n            setAddress(mockAddress);\n            setConnected(true);\n            localStorage.setItem(\"connectedWalletId\", providerId);\n            localStorage.setItem(\"walletAddress\", mockAddress);\n            return {\n                success: true,\n                address: mockAddress\n            };\n        } catch (err) {\n            setError(err.message || \"Failed to connect wallet\");\n            console.error(\"Wallet connection error:\", err);\n            return {\n                success: false,\n                error: err.message\n            };\n        } finally{\n            setConnecting(false);\n        }\n    }, [\n        walletProviders\n    ]);\n    // Disconnect wallet\n    const disconnect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        try {\n            // In a real implementation, this would disconnect from the actual wallet\n            // Clear state and localStorage\n            setProvider(null);\n            setAddress(null);\n            setConnected(false);\n            localStorage.removeItem(\"connectedWalletId\");\n            localStorage.removeItem(\"walletAddress\");\n            return {\n                success: true\n            };\n        } catch (err) {\n            setError(err.message || \"Failed to disconnect wallet\");\n            console.error(\"Wallet disconnection error:\", err);\n            return {\n                success: false,\n                error: err.message\n            };\n        }\n    }, []);\n    // Execute a transaction\n    const executeTransaction = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (transaction)=>{\n        try {\n            if (!connected || !provider) {\n                throw new Error(\"Wallet not connected\");\n            }\n            // In a real implementation, this would send the transaction to the blockchain\n            // For now, we'll simulate a transaction\n            // Simulate transaction delay\n            await new Promise((resolve)=>setTimeout(resolve, 1500));\n            // Generate a fake transaction ID\n            const mockTxId = `0x${Math.random().toString(16).substring(2, 42)}`;\n            return {\n                success: true,\n                transactionId: mockTxId\n            };\n        } catch (err) {\n            setError(err.message || \"Transaction failed\");\n            console.error(\"Transaction error:\", err);\n            return {\n                success: false,\n                error: err.message\n            };\n        }\n    }, [\n        connected,\n        provider\n    ]);\n    return {\n        address,\n        connected,\n        connecting,\n        provider,\n        walletProviders,\n        error,\n        connect,\n        disconnect,\n        executeTransaction\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useSuiWallet);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useSuiWallet.ts\n");

/***/ }),

/***/ "./src/hooks/useTokenBalance.ts":
/*!**************************************!*\
  !*** ./src/hooks/useTokenBalance.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useTokenBalance: () => (/* binding */ useTokenBalance)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _useSuiWallet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./useSuiWallet */ \"./src/hooks/useSuiWallet.ts\");\n/* harmony import */ var _utils_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/constants */ \"./src/utils/constants.ts\");\n// src/hooks/useTokenBalance.ts\n\n\n\nconst useTokenBalance = ()=>{\n    const { connected, address } = (0,_useSuiWallet__WEBPACK_IMPORTED_MODULE_1__.useSuiWallet)();\n    const [balance, setBalance] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Fetch token balance\n    const fetchBalance = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!connected || !address) {\n            setBalance(0);\n            return;\n        }\n        setLoading(true);\n        setError(null);\n        try {\n            // In a real implementation, this would fetch the token balance from the blockchain\n            // For development, we'll simulate a balance\n            // Simulate network delay\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            // Get the saved balance or generate a random one\n            const savedBalance = localStorage.getItem(`tardiBalance_${address}`);\n            if (savedBalance) {\n                setBalance(parseInt(savedBalance, 10));\n            } else {\n                // Generate a random balance between 100 and 1000\n                const randomBalance = Math.floor(Math.random() * 900) + 100;\n                setBalance(randomBalance);\n                // Save to localStorage for persistence\n                localStorage.setItem(`tardiBalance_${address}`, randomBalance.toString());\n            }\n        } catch (err) {\n            console.error(\"Error fetching token balance:\", err);\n            setError(err.message || \"Failed to fetch token balance\");\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        connected,\n        address\n    ]);\n    // Fetch balance when wallet connection changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        fetchBalance();\n    }, [\n        fetchBalance\n    ]);\n    // Update balance (used after transactions)\n    const updateBalance = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (newBalance)=>{\n        if (!connected || !address) return;\n        setBalance(newBalance);\n        localStorage.setItem(`tardiBalance_${address}`, newBalance.toString());\n    }, [\n        connected,\n        address\n    ]);\n    // Mock function to add tokens (for development)\n    const addTokens = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (amount)=>{\n        if (!connected || !address) return;\n        const newBalance = balance + amount;\n        updateBalance(newBalance);\n        return {\n            success: true,\n            newBalance\n        };\n    }, [\n        connected,\n        address,\n        balance,\n        updateBalance\n    ]);\n    // Mock function to remove tokens (for development)\n    const removeTokens = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (amount)=>{\n        if (!connected || !address) return {\n            success: false,\n            error: \"Not connected\"\n        };\n        if (balance < amount) {\n            return {\n                success: false,\n                error: \"Insufficient balance\"\n            };\n        }\n        const newBalance = balance - amount;\n        updateBalance(newBalance);\n        return {\n            success: true,\n            newBalance\n        };\n    }, [\n        connected,\n        address,\n        balance,\n        updateBalance\n    ]);\n    return {\n        balance,\n        loading,\n        error,\n        refetch: fetchBalance,\n        updateBalance,\n        addTokens,\n        removeTokens,\n        tokenSymbol: _utils_constants__WEBPACK_IMPORTED_MODULE_2__.constants.tokenSymbol,\n        tokenDecimals: _utils_constants__WEBPACK_IMPORTED_MODULE_2__.constants.tokenDecimals\n    };\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useTokenBalance);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LHVEQUFTQSxDQUFDa0MsV0FBVztRQUNsQ0MsZUFBZW5DLHVEQUFTQSxDQUFDbUMsYUFBYTtJQUN4QztBQUNGLEVBQUU7QUFFRixpRUFBZWxDLGVBQWVBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZ21pLXNsb3RzLy4vc3JjL2hvb2tzL3VzZVRva2VuQmFsYW5jZS50cz80Mjk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9ob29rcy91c2VUb2tlbkJhbGFuY2UudHNcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlU3VpV2FsbGV0IH0gZnJvbSAnLi91c2VTdWlXYWxsZXQnO1xuaW1wb3J0IHsgY29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzJztcblxuZXhwb3J0IGNvbnN0IHVzZVRva2VuQmFsYW5jZSA9ICgpID0+IHtcbiAgY29uc3QgeyBjb25uZWN0ZWQsIGFkZHJlc3MgfSA9IHVzZVN1aVdhbGxldCgpO1xuICBjb25zdCBbYmFsYW5jZSwgc2V0QmFsYW5jZV0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICBjb25zdCBbbG9hZGluZywgc2V0TG9hZGluZ10gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgLy8gRmV0Y2ggdG9rZW4gYmFsYW5jZVxuICBjb25zdCBmZXRjaEJhbGFuY2UgPSB1c2VDYWxsYmFjayhhc3luYyAoKSA9PiB7XG4gICAgaWYgKCFjb25uZWN0ZWQgfHwgIWFkZHJlc3MpIHtcbiAgICAgIHNldEJhbGFuY2UoMCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICBzZXRFcnJvcihudWxsKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHRoaXMgd291bGQgZmV0Y2ggdGhlIHRva2VuIGJhbGFuY2UgZnJvbSB0aGUgYmxvY2tjaGFpblxuICAgICAgLy8gRm9yIGRldmVsb3BtZW50LCB3ZSdsbCBzaW11bGF0ZSBhIGJhbGFuY2VcbiAgICAgIFxuICAgICAgLy8gU2ltdWxhdGUgbmV0d29yayBkZWxheVxuICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApKTtcbiAgICAgIFxuICAgICAgLy8gR2V0IHRoZSBzYXZlZCBiYWxhbmNlIG9yIGdlbmVyYXRlIGEgcmFuZG9tIG9uZVxuICAgICAgY29uc3Qgc2F2ZWRCYWxhbmNlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oYHRhcmRpQmFsYW5jZV8ke2FkZHJlc3N9YCk7XG4gICAgICBcbiAgICAgIGlmIChzYXZlZEJhbGFuY2UpIHtcbiAgICAgICAgc2V0QmFsYW5jZShwYXJzZUludChzYXZlZEJhbGFuY2UsIDEwKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBHZW5lcmF0ZSBhIHJhbmRvbSBiYWxhbmNlIGJldHdlZW4gMTAwIGFuZCAxMDAwXG4gICAgICAgIGNvbnN0IHJhbmRvbUJhbGFuY2UgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA5MDApICsgMTAwO1xuICAgICAgICBzZXRCYWxhbmNlKHJhbmRvbUJhbGFuY2UpO1xuICAgICAgICBcbiAgICAgICAgLy8gU2F2ZSB0byBsb2NhbFN0b3JhZ2UgZm9yIHBlcnNpc3RlbmNlXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGB0YXJkaUJhbGFuY2VfJHthZGRyZXNzfWAsIHJhbmRvbUJhbGFuY2UudG9TdHJpbmcoKSk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHRva2VuIGJhbGFuY2U6JywgZXJyKTtcbiAgICAgIHNldEVycm9yKGVyci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gZmV0Y2ggdG9rZW4gYmFsYW5jZScpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH0sIFtjb25uZWN0ZWQsIGFkZHJlc3NdKTtcblxuICAvLyBGZXRjaCBiYWxhbmNlIHdoZW4gd2FsbGV0IGNvbm5lY3Rpb24gY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGZldGNoQmFsYW5jZSgpO1xuICB9LCBbZmV0Y2hCYWxhbmNlXSk7XG5cbiAgLy8gVXBkYXRlIGJhbGFuY2UgKHVzZWQgYWZ0ZXIgdHJhbnNhY3Rpb25zKVxuICBjb25zdCB1cGRhdGVCYWxhbmNlID0gdXNlQ2FsbGJhY2soYXN5bmMgKG5ld0JhbGFuY2U6IG51bWJlcikgPT4ge1xuICAgIGlmICghY29ubmVjdGVkIHx8ICFhZGRyZXNzKSByZXR1cm47XG4gICAgXG4gICAgc2V0QmFsYW5jZShuZXdCYWxhbmNlKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShgdGFyZGlCYWxhbmNlXyR7YWRkcmVzc31gLCBuZXdCYWxhbmNlLnRvU3RyaW5nKCkpO1xuICB9LCBbY29ubmVjdGVkLCBhZGRyZXNzXSk7XG5cbiAgLy8gTW9jayBmdW5jdGlvbiB0byBhZGQgdG9rZW5zIChmb3IgZGV2ZWxvcG1lbnQpXG4gIGNvbnN0IGFkZFRva2VucyA9IHVzZUNhbGxiYWNrKGFzeW5jIChhbW91bnQ6IG51bWJlcikgPT4ge1xuICAgIGlmICghY29ubmVjdGVkIHx8ICFhZGRyZXNzKSByZXR1cm47XG4gICAgXG4gICAgY29uc3QgbmV3QmFsYW5jZSA9IGJhbGFuY2UgKyBhbW91bnQ7XG4gICAgdXBkYXRlQmFsYW5jZShuZXdCYWxhbmNlKTtcbiAgICBcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBuZXdCYWxhbmNlIH07XG4gIH0sIFtjb25uZWN0ZWQsIGFkZHJlc3MsIGJhbGFuY2UsIHVwZGF0ZUJhbGFuY2VdKTtcblxuICAvLyBNb2NrIGZ1bmN0aW9uIHRvIHJlbW92ZSB0b2tlbnMgKGZvciBkZXZlbG9wbWVudClcbiAgY29uc3QgcmVtb3ZlVG9rZW5zID0gdXNlQ2FsbGJhY2soYXN5bmMgKGFtb3VudDogbnVtYmVyKSA9PiB7XG4gICAgaWYgKCFjb25uZWN0ZWQgfHwgIWFkZHJlc3MpIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ05vdCBjb25uZWN0ZWQnIH07XG4gICAgXG4gICAgaWYgKGJhbGFuY2UgPCBhbW91bnQpIHtcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ0luc3VmZmljaWVudCBiYWxhbmNlJyB9O1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBuZXdCYWxhbmNlID0gYmFsYW5jZSAtIGFtb3VudDtcbiAgICB1cGRhdGVCYWxhbmNlKG5ld0JhbGFuY2UpO1xuICAgIFxuICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIG5ld0JhbGFuY2UgfTtcbiAgfSwgW2Nvbm5lY3RlZCwgYWRkcmVzcywgYmFsYW5jZSwgdXBkYXRlQmFsYW5jZV0pO1xuXG4gIHJldHVybiB7XG4gICAgYmFsYW5jZSxcbiAgICBsb2FkaW5nLFxuICAgIGVycm9yLFxuICAgIHJlZmV0Y2g6IGZldGNoQmFsYW5jZSxcbiAgICB1cGRhdGVCYWxhbmNlLFxuICAgIGFkZFRva2VucyxcbiAgICByZW1vdmVUb2tlbnMsXG4gICAgdG9rZW5TeW1ib2w6IGNvbnN0YW50cy50b2tlblN5bWJvbCxcbiAgICB0b2tlbkRlY2ltYWxzOiBjb25zdGFudHMudG9rZW5EZWNpbWFsc1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlVG9rZW5CYWxhbmNlOyJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUNhbGxiYWNrIiwidXNlU3VpV2FsbGV0IiwiY29uc3RhbnRzIiwidXNlVG9rZW5CYWxhbmNlIiwiY29ubmVjdGVkIiwiYWRkcmVzcyIsImJhbGFuY2UiLCJzZXRCYWxhbmNlIiwibG9hZGluZyIsInNldExvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiZmV0Y2hCYWxhbmNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0Iiwic2F2ZWRCYWxhbmNlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBhcnNlSW50IiwicmFuZG9tQmFsYW5jZSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInNldEl0ZW0iLCJ0b1N0cmluZyIsImVyciIsImNvbnNvbGUiLCJtZXNzYWdlIiwidXBkYXRlQmFsYW5jZSIsIm5ld0JhbGFuY2UiLCJhZGRUb2tlbnMiLCJhbW91bnQiLCJzdWNjZXNzIiwicmVtb3ZlVG9rZW5zIiwicmVmZXRjaCIsInRva2VuU3ltYm9sIiwidG9rZW5EZWNpbWFscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/hooks/useTokenBalance.ts\n");

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./src/styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _context_SuiWalletContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/SuiWalletContext */ \"./src/context/SuiWalletContext.tsx\");\n/* harmony import */ var _context_GameContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../context/GameContext */ \"./src/context/GameContext.tsx\");\n// src/pages/_app.tsx\n\n\n\n\n\nfunction MyApp({ Component, pageProps }) {\n    const [mounted, setMounted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // When the app is mounted on the client, update state\n    // This prevents hydration errors with localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        setMounted(true);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_SuiWalletContext__WEBPACK_IMPORTED_MODULE_3__.SuiWalletProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_GameContext__WEBPACK_IMPORTED_MODULE_4__.GameProvider, {\n            children: mounted && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                ...pageProps\n            }, void 0, false, {\n                fileName: \"/Users/cannedoxygen/Downloads/ngmi_slots/src/pages/_app.tsx\",\n                lineNumber: 20,\n                columnNumber: 21\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/cannedoxygen/Downloads/ngmi_slots/src/pages/_app.tsx\",\n            lineNumber: 19,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/cannedoxygen/Downloads/ngmi_slots/src/pages/_app.tsx\",\n        lineNumber: 18,\n        columnNumber: 5\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEscUJBQXFCOztBQUNVO0FBRWE7QUFDb0I7QUFDVjtBQUV0RCxTQUFTSSxNQUFNLEVBQUVDLFNBQVMsRUFBRUMsU0FBUyxFQUFZO0lBQy9DLE1BQU0sQ0FBQ0MsU0FBU0MsV0FBVyxHQUFHUiwrQ0FBUUEsQ0FBQztJQUV2QyxzREFBc0Q7SUFDdEQsbURBQW1EO0lBQ25EQyxnREFBU0EsQ0FBQztRQUNSTyxXQUFXO0lBQ2IsR0FBRyxFQUFFO0lBRUwscUJBQ0UsOERBQUNOLHdFQUFpQkE7a0JBQ2hCLDRFQUFDQyw4REFBWUE7c0JBQ1ZJLHlCQUFXLDhEQUFDRjtnQkFBVyxHQUFHQyxTQUFTOzs7Ozs7Ozs7Ozs7Ozs7O0FBSTVDO0FBRUEsaUVBQWVGLEtBQUtBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZ21pLXNsb3RzLy4vc3JjL3BhZ2VzL19hcHAudHN4P2Y5ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3BhZ2VzL19hcHAudHN4XG5pbXBvcnQgJy4uL3N0eWxlcy9nbG9iYWxzLmNzcyc7XG5pbXBvcnQgdHlwZSB7IEFwcFByb3BzIH0gZnJvbSAnbmV4dC9hcHAnO1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN1aVdhbGxldFByb3ZpZGVyIH0gZnJvbSAnLi4vY29udGV4dC9TdWlXYWxsZXRDb250ZXh0JztcbmltcG9ydCB7IEdhbWVQcm92aWRlciB9IGZyb20gJy4uL2NvbnRleHQvR2FtZUNvbnRleHQnO1xuXG5mdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XG4gIGNvbnN0IFttb3VudGVkLCBzZXRNb3VudGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyBXaGVuIHRoZSBhcHAgaXMgbW91bnRlZCBvbiB0aGUgY2xpZW50LCB1cGRhdGUgc3RhdGVcbiAgLy8gVGhpcyBwcmV2ZW50cyBoeWRyYXRpb24gZXJyb3JzIHdpdGggbG9jYWxTdG9yYWdlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0TW91bnRlZCh0cnVlKTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPFN1aVdhbGxldFByb3ZpZGVyPlxuICAgICAgPEdhbWVQcm92aWRlcj5cbiAgICAgICAge21vdW50ZWQgJiYgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPn1cbiAgICAgIDwvR2FtZVByb3ZpZGVyPlxuICAgIDwvU3VpV2FsbGV0UHJvdmlkZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwOyJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIlN1aVdhbGxldFByb3ZpZGVyIiwiR2FtZVByb3ZpZGVyIiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJtb3VudGVkIiwic2V0TW91bnRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n");

/***/ }),

/***/ "./src/utils/constants.ts":
/*!********************************!*\
  !*** ./src/utils/constants.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constants: () => (/* binding */ constants),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   errors: () => (/* binding */ errors),\n/* harmony export */   reelSettings: () => (/* binding */ reelSettings)\n/* harmony export */ });\n// src/utils/constants.ts\n/**\n * Application-wide constants\n */ const constants = {\n    // App information\n    appName: \"T-NGMI Slots\",\n    appVersion: \"1.0.0\",\n    // Network configuration\n    network: process.env.NEXT_PUBLIC_SUI_NETWORK || \"testnet\",\n    // Contract addresses - these would be populated from environment variables in production\n    contractAddress: {\n        packageId: process.env.NEXT_PUBLIC_PACKAGE_ID || \"0x123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234\",\n        moduleId: \"ngmi_slots\",\n        upgradeCapId: process.env.NEXT_PUBLIC_UPGRADE_CAP_ID || \"0xabcdef123456789abcdef123456789abcdef123456789abcdef123456789abc\"\n    },\n    // Token configuration\n    tokenSymbol: \"TARDI\",\n    tokenDecimals: 9,\n    tokenAddress: process.env.NEXT_PUBLIC_TOKEN_ADDRESS || \"0x123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234\",\n    // Game settings\n    minBet: 5,\n    maxBet: 100,\n    defaultBet: 10,\n    maxPaylines: 5,\n    // RTP (Return to Player) percentage\n    rtp: 95,\n    // Animation settings\n    spinDuration: 2000,\n    fastSpinDuration: 1000,\n    // API endpoints\n    apiEndpoint: process.env.NEXT_PUBLIC_API_ENDPOINT || \"/api\",\n    // Local storage keys\n    storageKeys: {\n        settings: \"tngmiSlotSettings\",\n        gameHistory: \"tngmiGameHistory\",\n        connectedWalletId: \"connectedWalletId\",\n        walletAddress: \"walletAddress\"\n    }\n};\n// Reel settings (symbol weights for each reel)\nconst reelSettings = {\n    // Symbol weights for each reel\n    // Higher weight = more likely to appear\n    weights: [\n        // Reel 1\n        {\n            \"low-gear\": 20,\n            \"low-token\": 20,\n            \"low-badge\": 20,\n            \"mid-robot\": 15,\n            \"mid-helmet\": 10,\n            \"mid-future\": 10,\n            \"high-tardi\": 5,\n            \"multiplier-2x\": 5,\n            \"multiplier-5x\": 3,\n            \"multiplier-10x\": 2,\n            \"free-spin\": 10\n        },\n        // Reel 2\n        {\n            \"low-gear\": 20,\n            \"low-token\": 20,\n            \"low-badge\": 20,\n            \"mid-robot\": 15,\n            \"mid-helmet\": 10,\n            \"mid-future\": 10,\n            \"high-tardi\": 5,\n            \"multiplier-2x\": 5,\n            \"multiplier-5x\": 3,\n            \"multiplier-10x\": 2,\n            \"free-spin\": 10\n        },\n        // Reel 3\n        {\n            \"low-gear\": 20,\n            \"low-token\": 20,\n            \"low-badge\": 20,\n            \"mid-robot\": 15,\n            \"mid-helmet\": 10,\n            \"mid-future\": 10,\n            \"high-tardi\": 5,\n            \"multiplier-2x\": 5,\n            \"multiplier-5x\": 3,\n            \"multiplier-10x\": 2,\n            \"free-spin\": 10\n        }\n    ]\n};\n// Errors\nconst errors = {\n    walletNotConnected: \"Wallet not connected\",\n    insufficientBalance: \"Insufficient balance\",\n    invalidBetAmount: \"Invalid bet amount\",\n    networkError: \"Network error, please try again\",\n    transactionFailed: \"Transaction failed\",\n    contractError: \"Smart contract error\"\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (constants);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY29uc3RhbnRzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSx5QkFBeUI7QUFFekI7O0NBRUMsR0FFTSxNQUFNQSxZQUFZO0lBQ3JCLGtCQUFrQjtJQUNsQkMsU0FBUztJQUNUQyxZQUFZO0lBRVosd0JBQXdCO0lBQ3hCQyxTQUFTQyxRQUFRQyxHQUFHLENBQUNDLHVCQUF1QixJQUFJO0lBRWhELHlGQUF5RjtJQUN6RkMsaUJBQWlCO1FBQ2ZDLFdBQVdKLFFBQVFDLEdBQUcsQ0FBQ0ksc0JBQXNCLElBQUk7UUFDakRDLFVBQVU7UUFDVkMsY0FBY1AsUUFBUUMsR0FBRyxDQUFDTywwQkFBMEIsSUFBSTtJQUMxRDtJQUVBLHNCQUFzQjtJQUN0QkMsYUFBYTtJQUNiQyxlQUFlO0lBQ2ZDLGNBQWNYLFFBQVFDLEdBQUcsQ0FBQ1cseUJBQXlCLElBQUk7SUFFdkQsZ0JBQWdCO0lBQ2hCQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsWUFBWTtJQUNaQyxhQUFhO0lBRWIsb0NBQW9DO0lBQ3BDQyxLQUFLO0lBRUwscUJBQXFCO0lBQ3JCQyxjQUFjO0lBQ2RDLGtCQUFrQjtJQUVsQixnQkFBZ0I7SUFDaEJDLGFBQWFwQixRQUFRQyxHQUFHLENBQUNvQix3QkFBd0IsSUFBSTtJQUVyRCxxQkFBcUI7SUFDckJDLGFBQWE7UUFDWEMsVUFBVTtRQUNWQyxhQUFhO1FBQ2JDLG1CQUFtQjtRQUNuQkMsZUFBZTtJQUNqQjtBQUNGLEVBQUU7QUFFRiwrQ0FBK0M7QUFDeEMsTUFBTUMsZUFBZTtJQUMxQiwrQkFBK0I7SUFDL0Isd0NBQXdDO0lBQ3hDQyxTQUFTO1FBQ1AsU0FBUztRQUNUO1lBQ0UsWUFBWTtZQUNaLGFBQWE7WUFDYixhQUFhO1lBQ2IsYUFBYTtZQUNiLGNBQWM7WUFDZCxjQUFjO1lBQ2QsY0FBYztZQUNkLGlCQUFpQjtZQUNqQixpQkFBaUI7WUFDakIsa0JBQWtCO1lBQ2xCLGFBQWE7UUFDZjtRQUNBLFNBQVM7UUFDVDtZQUNFLFlBQVk7WUFDWixhQUFhO1lBQ2IsYUFBYTtZQUNiLGFBQWE7WUFDYixjQUFjO1lBQ2QsY0FBYztZQUNkLGNBQWM7WUFDZCxpQkFBaUI7WUFDakIsaUJBQWlCO1lBQ2pCLGtCQUFrQjtZQUNsQixhQUFhO1FBQ2Y7UUFDQSxTQUFTO1FBQ1Q7WUFDRSxZQUFZO1lBQ1osYUFBYTtZQUNiLGFBQWE7WUFDYixhQUFhO1lBQ2IsY0FBYztZQUNkLGNBQWM7WUFDZCxjQUFjO1lBQ2QsaUJBQWlCO1lBQ2pCLGlCQUFpQjtZQUNqQixrQkFBa0I7WUFDbEIsYUFBYTtRQUNmO0tBQ0Q7QUFDSCxFQUFFO0FBRUYsU0FBUztBQUNGLE1BQU1DLFNBQVM7SUFDcEJDLG9CQUFvQjtJQUNwQkMscUJBQXFCO0lBQ3JCQyxrQkFBa0I7SUFDbEJDLGNBQWM7SUFDZEMsbUJBQW1CO0lBQ25CQyxlQUFlO0FBQ2pCLEVBQUU7QUFFRixpRUFBZXZDLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZ21pLXNsb3RzLy4vc3JjL3V0aWxzL2NvbnN0YW50cy50cz8wNTg4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9jb25zdGFudHMudHNcblxuLyoqXG4gKiBBcHBsaWNhdGlvbi13aWRlIGNvbnN0YW50c1xuICovXG5cbmV4cG9ydCBjb25zdCBjb25zdGFudHMgPSB7XG4gICAgLy8gQXBwIGluZm9ybWF0aW9uXG4gICAgYXBwTmFtZTogJ1QtTkdNSSBTbG90cycsXG4gICAgYXBwVmVyc2lvbjogJzEuMC4wJyxcbiAgICBcbiAgICAvLyBOZXR3b3JrIGNvbmZpZ3VyYXRpb25cbiAgICBuZXR3b3JrOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVUlfTkVUV09SSyB8fCAndGVzdG5ldCcsIC8vICdtYWlubmV0JyBvciAndGVzdG5ldCdcbiAgICBcbiAgICAvLyBDb250cmFjdCBhZGRyZXNzZXMgLSB0aGVzZSB3b3VsZCBiZSBwb3B1bGF0ZWQgZnJvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaW4gcHJvZHVjdGlvblxuICAgIGNvbnRyYWN0QWRkcmVzczoge1xuICAgICAgcGFja2FnZUlkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19QQUNLQUdFX0lEIHx8ICcweDEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQnLFxuICAgICAgbW9kdWxlSWQ6ICduZ21pX3Nsb3RzJyxcbiAgICAgIHVwZ3JhZGVDYXBJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfVVBHUkFERV9DQVBfSUQgfHwgJzB4YWJjZGVmMTIzNDU2Nzg5YWJjZGVmMTIzNDU2Nzg5YWJjZGVmMTIzNDU2Nzg5YWJjZGVmMTIzNDU2Nzg5YWJjJ1xuICAgIH0sXG4gICAgXG4gICAgLy8gVG9rZW4gY29uZmlndXJhdGlvblxuICAgIHRva2VuU3ltYm9sOiAnVEFSREknLFxuICAgIHRva2VuRGVjaW1hbHM6IDksXG4gICAgdG9rZW5BZGRyZXNzOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19UT0tFTl9BRERSRVNTIHx8ICcweDEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQ1Njc4OWFiY2RlZjEyMzQnLFxuICAgIFxuICAgIC8vIEdhbWUgc2V0dGluZ3NcbiAgICBtaW5CZXQ6IDUsXG4gICAgbWF4QmV0OiAxMDAsXG4gICAgZGVmYXVsdEJldDogMTAsXG4gICAgbWF4UGF5bGluZXM6IDUsXG4gICAgXG4gICAgLy8gUlRQIChSZXR1cm4gdG8gUGxheWVyKSBwZXJjZW50YWdlXG4gICAgcnRwOiA5NSwgLy8gOTUlIFJUUFxuICAgIFxuICAgIC8vIEFuaW1hdGlvbiBzZXR0aW5nc1xuICAgIHNwaW5EdXJhdGlvbjogMjAwMCwgLy8gMiBzZWNvbmRzIGZvciByZWd1bGFyIHNwaW5cbiAgICBmYXN0U3BpbkR1cmF0aW9uOiAxMDAwLCAvLyAxIHNlY29uZCBmb3IgZmFzdCBzcGluXG4gICAgXG4gICAgLy8gQVBJIGVuZHBvaW50c1xuICAgIGFwaUVuZHBvaW50OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfRU5EUE9JTlQgfHwgJy9hcGknLFxuICAgIFxuICAgIC8vIExvY2FsIHN0b3JhZ2Uga2V5c1xuICAgIHN0b3JhZ2VLZXlzOiB7XG4gICAgICBzZXR0aW5nczogJ3RuZ21pU2xvdFNldHRpbmdzJyxcbiAgICAgIGdhbWVIaXN0b3J5OiAndG5nbWlHYW1lSGlzdG9yeScsXG4gICAgICBjb25uZWN0ZWRXYWxsZXRJZDogJ2Nvbm5lY3RlZFdhbGxldElkJyxcbiAgICAgIHdhbGxldEFkZHJlc3M6ICd3YWxsZXRBZGRyZXNzJyxcbiAgICB9XG4gIH07XG4gIFxuICAvLyBSZWVsIHNldHRpbmdzIChzeW1ib2wgd2VpZ2h0cyBmb3IgZWFjaCByZWVsKVxuICBleHBvcnQgY29uc3QgcmVlbFNldHRpbmdzID0ge1xuICAgIC8vIFN5bWJvbCB3ZWlnaHRzIGZvciBlYWNoIHJlZWxcbiAgICAvLyBIaWdoZXIgd2VpZ2h0ID0gbW9yZSBsaWtlbHkgdG8gYXBwZWFyXG4gICAgd2VpZ2h0czogW1xuICAgICAgLy8gUmVlbCAxXG4gICAgICB7XG4gICAgICAgICdsb3ctZ2Vhcic6IDIwLFxuICAgICAgICAnbG93LXRva2VuJzogMjAsXG4gICAgICAgICdsb3ctYmFkZ2UnOiAyMCxcbiAgICAgICAgJ21pZC1yb2JvdCc6IDE1LFxuICAgICAgICAnbWlkLWhlbG1ldCc6IDEwLFxuICAgICAgICAnbWlkLWZ1dHVyZSc6IDEwLFxuICAgICAgICAnaGlnaC10YXJkaSc6IDUsXG4gICAgICAgICdtdWx0aXBsaWVyLTJ4JzogNSxcbiAgICAgICAgJ211bHRpcGxpZXItNXgnOiAzLFxuICAgICAgICAnbXVsdGlwbGllci0xMHgnOiAyLFxuICAgICAgICAnZnJlZS1zcGluJzogMTAsXG4gICAgICB9LFxuICAgICAgLy8gUmVlbCAyXG4gICAgICB7XG4gICAgICAgICdsb3ctZ2Vhcic6IDIwLFxuICAgICAgICAnbG93LXRva2VuJzogMjAsXG4gICAgICAgICdsb3ctYmFkZ2UnOiAyMCxcbiAgICAgICAgJ21pZC1yb2JvdCc6IDE1LFxuICAgICAgICAnbWlkLWhlbG1ldCc6IDEwLFxuICAgICAgICAnbWlkLWZ1dHVyZSc6IDEwLFxuICAgICAgICAnaGlnaC10YXJkaSc6IDUsXG4gICAgICAgICdtdWx0aXBsaWVyLTJ4JzogNSxcbiAgICAgICAgJ211bHRpcGxpZXItNXgnOiAzLFxuICAgICAgICAnbXVsdGlwbGllci0xMHgnOiAyLFxuICAgICAgICAnZnJlZS1zcGluJzogMTAsXG4gICAgICB9LFxuICAgICAgLy8gUmVlbCAzXG4gICAgICB7XG4gICAgICAgICdsb3ctZ2Vhcic6IDIwLFxuICAgICAgICAnbG93LXRva2VuJzogMjAsXG4gICAgICAgICdsb3ctYmFkZ2UnOiAyMCxcbiAgICAgICAgJ21pZC1yb2JvdCc6IDE1LFxuICAgICAgICAnbWlkLWhlbG1ldCc6IDEwLFxuICAgICAgICAnbWlkLWZ1dHVyZSc6IDEwLFxuICAgICAgICAnaGlnaC10YXJkaSc6IDUsXG4gICAgICAgICdtdWx0aXBsaWVyLTJ4JzogNSxcbiAgICAgICAgJ211bHRpcGxpZXItNXgnOiAzLFxuICAgICAgICAnbXVsdGlwbGllci0xMHgnOiAyLFxuICAgICAgICAnZnJlZS1zcGluJzogMTAsXG4gICAgICB9XG4gICAgXVxuICB9O1xuICBcbiAgLy8gRXJyb3JzXG4gIGV4cG9ydCBjb25zdCBlcnJvcnMgPSB7XG4gICAgd2FsbGV0Tm90Q29ubmVjdGVkOiAnV2FsbGV0IG5vdCBjb25uZWN0ZWQnLFxuICAgIGluc3VmZmljaWVudEJhbGFuY2U6ICdJbnN1ZmZpY2llbnQgYmFsYW5jZScsXG4gICAgaW52YWxpZEJldEFtb3VudDogJ0ludmFsaWQgYmV0IGFtb3VudCcsXG4gICAgbmV0d29ya0Vycm9yOiAnTmV0d29yayBlcnJvciwgcGxlYXNlIHRyeSBhZ2FpbicsXG4gICAgdHJhbnNhY3Rpb25GYWlsZWQ6ICdUcmFuc2FjdGlvbiBmYWlsZWQnLFxuICAgIGNvbnRyYWN0RXJyb3I6ICdTbWFydCBjb250cmFjdCBlcnJvcicsXG4gIH07XG4gIFxuICBleHBvcnQgZGVmYXVsdCBjb25zdGFudHM7Il0sIm5hbWVzIjpbImNvbnN0YW50cyIsImFwcE5hbWUiLCJhcHBWZXJzaW9uIiwibmV0d29yayIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVUlfTkVUV09SSyIsImNvbnRyYWN0QWRkcmVzcyIsInBhY2thZ2VJZCIsIk5FWFRfUFVCTElDX1BBQ0tBR0VfSUQiLCJtb2R1bGVJZCIsInVwZ3JhZGVDYXBJZCIsIk5FWFRfUFVCTElDX1VQR1JBREVfQ0FQX0lEIiwidG9rZW5TeW1ib2wiLCJ0b2tlbkRlY2ltYWxzIiwidG9rZW5BZGRyZXNzIiwiTkVYVF9QVUJMSUNfVE9LRU5fQUREUkVTUyIsIm1pbkJldCIsIm1heEJldCIsImRlZmF1bHRCZXQiLCJtYXhQYXlsaW5lcyIsInJ0cCIsInNwaW5EdXJhdGlvbiIsImZhc3RTcGluRHVyYXRpb24iLCJhcGlFbmRwb2ludCIsIk5FWFRfUFVCTElDX0FQSV9FTkRQT0lOVCIsInN0b3JhZ2VLZXlzIiwic2V0dGluZ3MiLCJnYW1lSGlzdG9yeSIsImNvbm5lY3RlZFdhbGxldElkIiwid2FsbGV0QWRkcmVzcyIsInJlZWxTZXR0aW5ncyIsIndlaWdodHMiLCJlcnJvcnMiLCJ3YWxsZXROb3RDb25uZWN0ZWQiLCJpbnN1ZmZpY2llbnRCYWxhbmNlIiwiaW52YWxpZEJldEFtb3VudCIsIm5ldHdvcmtFcnJvciIsInRyYW5zYWN0aW9uRmFpbGVkIiwiY29udHJhY3RFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/constants.ts\n");

/***/ }),

/***/ "./src/utils/cryptoUtils.ts":
/*!**********************************!*\
  !*** ./src/utils/cryptoUtils.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   randomHex: () => (/* binding */ randomHex),\n/* harmony export */   sha256: () => (/* binding */ sha256),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature)\n/* harmony export */ });\n// src/utils/cryptoUtils.ts\n/**\n * Simple utility functions for cryptographic operations\n * In a production environment, these would use more robust libraries\n */ /**\n * Generate a SHA-256 hash of the input string\n * @param input String to hash\n * @returns Hex string of the hash\n */ const sha256 = async (input)=>{\n    // For browser environments, use the Web Crypto API\n    if (false) {}\n    // Fall back to a simple hash implementation for non-browser environments\n    // or if the Web Crypto API is not available\n    return simpleHash(input);\n};\n/**\n * A simple (non-cryptographic) hash function as fallback\n * NOT FOR PRODUCTION USE - this is just a fallback for development\n * @param input String to hash\n * @returns A hash string\n */ const simpleHash = (input)=>{\n    let hash = 0;\n    if (input.length === 0) return hash.toString(16);\n    for(let i = 0; i < input.length; i++){\n        const char = input.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n    // Convert to hex string and ensure it's 64 characters long (to mimic SHA-256)\n    const hexHash = Math.abs(hash).toString(16);\n    const padding = \"0\".repeat(64 - hexHash.length);\n    return padding + hexHash;\n};\n/**\n * Generate a random hex string of specified length\n * @param length Length of the output string (characters)\n * @returns Random hex string\n */ const randomHex = (length)=>{\n    const chars = \"0123456789abcdef\";\n    let result = \"\";\n    for(let i = 0; i < length; i++){\n        result += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return result;\n};\n/**\n * Verify a digital signature\n * This is a placeholder - in a real implementation, this would use proper signature verification\n * @param message The message that was signed\n * @param signature The signature to verify\n * @param publicKey The public key to verify against\n * @returns Boolean indicating if signature is valid\n */ const verifySignature = async (message, signature, publicKey)=>{\n    // In a real implementation, this would use proper crypto libraries\n    // For development, we'll just return true\n    console.log(\"Signature verification called with:\", {\n        message,\n        signature,\n        publicKey\n    });\n    // Simulate verification delay\n    await new Promise((resolve)=>setTimeout(resolve, 500));\n    // Always return true for development\n    return true;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    sha256,\n    randomHex,\n    verifySignature\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvY3J5cHRvVXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLDJCQUEyQjtBQUUzQjs7O0NBR0MsR0FFRDs7OztDQUlDLEdBQ00sTUFBTUEsU0FBUyxPQUFPQztJQUMzQixtREFBbUQ7SUFDbkQsSUFBSSxLQUFzRSxFQUFFLEVBa0IzRTtJQUVELHlFQUF5RTtJQUN6RSw0Q0FBNEM7SUFDNUMsT0FBT3FCLFdBQVdyQjtBQUNwQixFQUFFO0FBRUY7Ozs7O0NBS0MsR0FDRCxNQUFNcUIsYUFBYSxDQUFDckI7SUFDbEIsSUFBSXNCLE9BQU87SUFFWCxJQUFJdEIsTUFBTXVCLE1BQU0sS0FBSyxHQUFHLE9BQU9ELEtBQUtQLFFBQVEsQ0FBQztJQUU3QyxJQUFLLElBQUlTLElBQUksR0FBR0EsSUFBSXhCLE1BQU11QixNQUFNLEVBQUVDLElBQUs7UUFDckMsTUFBTUMsT0FBT3pCLE1BQU0wQixVQUFVLENBQUNGO1FBQzlCRixPQUFPLENBQUVBLFFBQVEsS0FBS0EsT0FBUUc7UUFDOUJILE9BQU9BLE9BQU9BLE1BQU0sMkJBQTJCO0lBQ2pEO0lBRUEsOEVBQThFO0lBQzlFLE1BQU1LLFVBQVVDLEtBQUtDLEdBQUcsQ0FBQ1AsTUFBTVAsUUFBUSxDQUFDO0lBQ3hDLE1BQU1lLFVBQVUsSUFBSUMsTUFBTSxDQUFDLEtBQUtKLFFBQVFKLE1BQU07SUFFOUMsT0FBT08sVUFBVUg7QUFDbkI7QUFFQTs7OztDQUlDLEdBQ00sTUFBTUssWUFBWSxDQUFDVDtJQUN4QixNQUFNVSxRQUFRO0lBQ2QsSUFBSUMsU0FBUztJQUViLElBQUssSUFBSVYsSUFBSSxHQUFHQSxJQUFJRCxRQUFRQyxJQUFLO1FBQy9CVSxVQUFVRCxLQUFLLENBQUNMLEtBQUtPLEtBQUssQ0FBQ1AsS0FBS1EsTUFBTSxLQUFLSCxNQUFNVixNQUFNLEVBQUU7SUFDM0Q7SUFFQSxPQUFPVztBQUNULEVBQUU7QUFFRjs7Ozs7OztDQU9DLEdBQ00sTUFBTUcsa0JBQWtCLE9BQzdCQyxTQUNBQyxXQUNBQztJQUVBLG1FQUFtRTtJQUNuRSwwQ0FBMEM7SUFDMUNyQixRQUFRc0IsR0FBRyxDQUFDLHVDQUF1QztRQUFFSDtRQUFTQztRQUFXQztJQUFVO0lBRW5GLDhCQUE4QjtJQUM5QixNQUFNLElBQUlFLFFBQVFDLENBQUFBLFVBQVdDLFdBQVdELFNBQVM7SUFFakQscUNBQXFDO0lBQ3JDLE9BQU87QUFDVCxFQUFFO0FBRUYsaUVBQWU7SUFDYjVDO0lBQ0FpQztJQUNBSztBQUNGLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25nbWktc2xvdHMvLi9zcmMvdXRpbHMvY3J5cHRvVXRpbHMudHM/ZjY2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvY3J5cHRvVXRpbHMudHNcblxuLyoqXG4gKiBTaW1wbGUgdXRpbGl0eSBmdW5jdGlvbnMgZm9yIGNyeXB0b2dyYXBoaWMgb3BlcmF0aW9uc1xuICogSW4gYSBwcm9kdWN0aW9uIGVudmlyb25tZW50LCB0aGVzZSB3b3VsZCB1c2UgbW9yZSByb2J1c3QgbGlicmFyaWVzXG4gKi9cblxuLyoqXG4gKiBHZW5lcmF0ZSBhIFNIQS0yNTYgaGFzaCBvZiB0aGUgaW5wdXQgc3RyaW5nXG4gKiBAcGFyYW0gaW5wdXQgU3RyaW5nIHRvIGhhc2hcbiAqIEByZXR1cm5zIEhleCBzdHJpbmcgb2YgdGhlIGhhc2hcbiAqL1xuZXhwb3J0IGNvbnN0IHNoYTI1NiA9IGFzeW5jIChpbnB1dDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcbiAgLy8gRm9yIGJyb3dzZXIgZW52aXJvbm1lbnRzLCB1c2UgdGhlIFdlYiBDcnlwdG8gQVBJXG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuY3J5cHRvICYmIHdpbmRvdy5jcnlwdG8uc3VidGxlKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIENvbnZlcnQgc3RyaW5nIHRvIGJ1ZmZlclxuICAgICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgY29uc3QgZGF0YSA9IGVuY29kZXIuZW5jb2RlKGlucHV0KTtcbiAgICAgIFxuICAgICAgLy8gR2VuZXJhdGUgaGFzaFxuICAgICAgY29uc3QgaGFzaEJ1ZmZlciA9IGF3YWl0IHdpbmRvdy5jcnlwdG8uc3VidGxlLmRpZ2VzdCgnU0hBLTI1NicsIGRhdGEpO1xuICAgICAgXG4gICAgICAvLyBDb252ZXJ0IGJ1ZmZlciB0byBoZXggc3RyaW5nXG4gICAgICByZXR1cm4gQXJyYXkuZnJvbShuZXcgVWludDhBcnJheShoYXNoQnVmZmVyKSlcbiAgICAgICAgLm1hcChiID0+IGIudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJykpXG4gICAgICAgIC5qb2luKCcnKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1dlYiBDcnlwdG8gQVBJIGVycm9yOicsIGVycik7XG4gICAgICAvLyBGYWxsIGJhY2sgdG8gc2ltcGxlIGhhc2ggaWYgV2ViIENyeXB0byBmYWlsc1xuICAgICAgcmV0dXJuIHNpbXBsZUhhc2goaW5wdXQpO1xuICAgIH1cbiAgfVxuICBcbiAgLy8gRmFsbCBiYWNrIHRvIGEgc2ltcGxlIGhhc2ggaW1wbGVtZW50YXRpb24gZm9yIG5vbi1icm93c2VyIGVudmlyb25tZW50c1xuICAvLyBvciBpZiB0aGUgV2ViIENyeXB0byBBUEkgaXMgbm90IGF2YWlsYWJsZVxuICByZXR1cm4gc2ltcGxlSGFzaChpbnB1dCk7XG59O1xuXG4vKipcbiAqIEEgc2ltcGxlIChub24tY3J5cHRvZ3JhcGhpYykgaGFzaCBmdW5jdGlvbiBhcyBmYWxsYmFja1xuICogTk9UIEZPUiBQUk9EVUNUSU9OIFVTRSAtIHRoaXMgaXMganVzdCBhIGZhbGxiYWNrIGZvciBkZXZlbG9wbWVudFxuICogQHBhcmFtIGlucHV0IFN0cmluZyB0byBoYXNoXG4gKiBAcmV0dXJucyBBIGhhc2ggc3RyaW5nXG4gKi9cbmNvbnN0IHNpbXBsZUhhc2ggPSAoaW5wdXQ6IHN0cmluZyk6IHN0cmluZyA9PiB7XG4gIGxldCBoYXNoID0gMDtcbiAgXG4gIGlmIChpbnB1dC5sZW5ndGggPT09IDApIHJldHVybiBoYXNoLnRvU3RyaW5nKDE2KTtcbiAgXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBjaGFyID0gaW5wdXQuY2hhckNvZGVBdChpKTtcbiAgICBoYXNoID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBjaGFyO1xuICAgIGhhc2ggPSBoYXNoICYgaGFzaDsgLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cbiAgXG4gIC8vIENvbnZlcnQgdG8gaGV4IHN0cmluZyBhbmQgZW5zdXJlIGl0J3MgNjQgY2hhcmFjdGVycyBsb25nICh0byBtaW1pYyBTSEEtMjU2KVxuICBjb25zdCBoZXhIYXNoID0gTWF0aC5hYnMoaGFzaCkudG9TdHJpbmcoMTYpO1xuICBjb25zdCBwYWRkaW5nID0gJzAnLnJlcGVhdCg2NCAtIGhleEhhc2gubGVuZ3RoKTtcbiAgXG4gIHJldHVybiBwYWRkaW5nICsgaGV4SGFzaDtcbn07XG5cbi8qKlxuICogR2VuZXJhdGUgYSByYW5kb20gaGV4IHN0cmluZyBvZiBzcGVjaWZpZWQgbGVuZ3RoXG4gKiBAcGFyYW0gbGVuZ3RoIExlbmd0aCBvZiB0aGUgb3V0cHV0IHN0cmluZyAoY2hhcmFjdGVycylcbiAqIEByZXR1cm5zIFJhbmRvbSBoZXggc3RyaW5nXG4gKi9cbmV4cG9ydCBjb25zdCByYW5kb21IZXggPSAobGVuZ3RoOiBudW1iZXIpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBjaGFycyA9ICcwMTIzNDU2Nzg5YWJjZGVmJztcbiAgbGV0IHJlc3VsdCA9ICcnO1xuICBcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIHJlc3VsdCArPSBjaGFyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpXTtcbiAgfVxuICBcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogVmVyaWZ5IGEgZGlnaXRhbCBzaWduYXR1cmVcbiAqIFRoaXMgaXMgYSBwbGFjZWhvbGRlciAtIGluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgdGhpcyB3b3VsZCB1c2UgcHJvcGVyIHNpZ25hdHVyZSB2ZXJpZmljYXRpb25cbiAqIEBwYXJhbSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRoYXQgd2FzIHNpZ25lZFxuICogQHBhcmFtIHNpZ25hdHVyZSBUaGUgc2lnbmF0dXJlIHRvIHZlcmlmeVxuICogQHBhcmFtIHB1YmxpY0tleSBUaGUgcHVibGljIGtleSB0byB2ZXJpZnkgYWdhaW5zdFxuICogQHJldHVybnMgQm9vbGVhbiBpbmRpY2F0aW5nIGlmIHNpZ25hdHVyZSBpcyB2YWxpZFxuICovXG5leHBvcnQgY29uc3QgdmVyaWZ5U2lnbmF0dXJlID0gYXN5bmMgKFxuICBtZXNzYWdlOiBzdHJpbmcsXG4gIHNpZ25hdHVyZTogc3RyaW5nLFxuICBwdWJsaWNLZXk6IHN0cmluZ1xuKTogUHJvbWlzZTxib29sZWFuPiA9PiB7XG4gIC8vIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgdGhpcyB3b3VsZCB1c2UgcHJvcGVyIGNyeXB0byBsaWJyYXJpZXNcbiAgLy8gRm9yIGRldmVsb3BtZW50LCB3ZSdsbCBqdXN0IHJldHVybiB0cnVlXG4gIGNvbnNvbGUubG9nKCdTaWduYXR1cmUgdmVyaWZpY2F0aW9uIGNhbGxlZCB3aXRoOicsIHsgbWVzc2FnZSwgc2lnbmF0dXJlLCBwdWJsaWNLZXkgfSk7XG4gIFxuICAvLyBTaW11bGF0ZSB2ZXJpZmljYXRpb24gZGVsYXlcbiAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDUwMCkpO1xuICBcbiAgLy8gQWx3YXlzIHJldHVybiB0cnVlIGZvciBkZXZlbG9wbWVudFxuICByZXR1cm4gdHJ1ZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc2hhMjU2LFxuICByYW5kb21IZXgsXG4gIHZlcmlmeVNpZ25hdHVyZVxufTsiXSwibmFtZXMiOlsic2hhMjU2IiwiaW5wdXQiLCJ3aW5kb3ciLCJjcnlwdG8iLCJzdWJ0bGUiLCJlbmNvZGVyIiwiVGV4dEVuY29kZXIiLCJkYXRhIiwiZW5jb2RlIiwiaGFzaEJ1ZmZlciIsImRpZ2VzdCIsIkFycmF5IiwiZnJvbSIsIlVpbnQ4QXJyYXkiLCJtYXAiLCJiIiwidG9TdHJpbmciLCJwYWRTdGFydCIsImpvaW4iLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJzaW1wbGVIYXNoIiwiaGFzaCIsImxlbmd0aCIsImkiLCJjaGFyIiwiY2hhckNvZGVBdCIsImhleEhhc2giLCJNYXRoIiwiYWJzIiwicGFkZGluZyIsInJlcGVhdCIsInJhbmRvbUhleCIsImNoYXJzIiwicmVzdWx0IiwiZmxvb3IiLCJyYW5kb20iLCJ2ZXJpZnlTaWduYXR1cmUiLCJtZXNzYWdlIiwic2lnbmF0dXJlIiwicHVibGljS2V5IiwibG9nIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/cryptoUtils.ts\n");

/***/ }),

/***/ "./src/utils/gameLogic.ts":
/*!********************************!*\
  !*** ./src/utils/gameLogic.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkPaylineWin: () => (/* binding */ checkPaylineWin),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   evaluateWin: () => (/* binding */ evaluateWin),\n/* harmony export */   getPaylinePositions: () => (/* binding */ getPaylinePositions)\n/* harmony export */ });\n/* harmony import */ var _config_gameConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/gameConfig */ \"./src/config/gameConfig.ts\");\n/* harmony import */ var _config_paylines__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/paylines */ \"./src/config/paylines.ts\");\n// src/utils/gameLogic.ts\n\n\n/**\n * Evaluates a spin result to determine wins\n * @param reelPositions 3x3 grid of symbol identifiers\n * @param betAmount The amount bet on this spin\n * @param paylinesToCheck The paylines to check for wins (defaults to active paylines)\n * @returns Object containing win information\n */ const evaluateWin = (reelPositions, betAmount, paylinesToCheck = _config_paylines__WEBPACK_IMPORTED_MODULE_1__.activePaylines)=>{\n    // Initialize result object\n    const result = {\n        totalWin: 0,\n        winningPaylines: [],\n        winsByPayline: {},\n        multiplier: 1,\n        freeSpins: 0,\n        symbols: []\n    };\n    // Check if we have a valid 3x3 grid\n    if (!reelPositions || reelPositions.length !== 3) {\n        return result;\n    }\n    // Check for multipliers anywhere on the grid\n    let highestMultiplier = 1;\n    let freeSpinsCount = 0;\n    // Collect all symbols for later reference\n    const allSymbols = [];\n    // Process the grid to collect special symbols and all displayed symbols\n    for(let reel = 0; reel < reelPositions.length; reel++){\n        for(let row = 0; row < reelPositions[reel].length; row++){\n            const symbolId = reelPositions[reel][row];\n            allSymbols.push(symbolId);\n            // Check if this is a multiplier symbol\n            if (symbolId.startsWith(\"multiplier-\")) {\n                const symbolConfig = _config_gameConfig__WEBPACK_IMPORTED_MODULE_0__.gameConfig.symbols[symbolId];\n                if (symbolConfig && symbolConfig.multiplier) {\n                    highestMultiplier = Math.max(highestMultiplier, symbolConfig.multiplier);\n                }\n            }\n            // Check if this is a free spin symbol\n            if (symbolId === \"free-spin\") {\n                const symbolConfig = _config_gameConfig__WEBPACK_IMPORTED_MODULE_0__.gameConfig.symbols[symbolId];\n                if (symbolConfig && symbolConfig.freeSpins) {\n                    freeSpinsCount += symbolConfig.freeSpins;\n                }\n            }\n        }\n    }\n    // Store all symbols in result\n    result.symbols = allSymbols;\n    // Check for jackpot (all positions have the high-tardi symbol)\n    const isJackpot = allSymbols.every((symbol)=>symbol === \"high-tardi\");\n    if (isJackpot) {\n        // Jackpot win!\n        const jackpotAmount = betAmount * _config_gameConfig__WEBPACK_IMPORTED_MODULE_0__.gameConfig.jackpotMultiplier * highestMultiplier;\n        result.totalWin = jackpotAmount;\n        result.multiplier = highestMultiplier;\n        result.isJackpot = true;\n        // In a jackpot, all paylines are winners\n        result.winningPaylines = paylinesToCheck.map((pl)=>pl.id);\n        // Add individual payline wins\n        paylinesToCheck.forEach((payline)=>{\n            result.winsByPayline[payline.id] = jackpotAmount / paylinesToCheck.length;\n        });\n        result.freeSpins = freeSpinsCount;\n        return result;\n    }\n    // Check each payline for wins\n    paylinesToCheck.forEach((payline)=>{\n        const paylineWin = checkPaylineWin(reelPositions, payline, betAmount);\n        if (paylineWin > 0) {\n            result.winningPaylines.push(payline.id);\n            result.winsByPayline[payline.id] = paylineWin;\n            result.totalWin += paylineWin;\n        }\n    });\n    // Apply multiplier to total win\n    if (result.totalWin > 0 && highestMultiplier > 1) {\n        result.totalWin *= highestMultiplier;\n        result.multiplier = highestMultiplier;\n    }\n    // Add free spins\n    result.freeSpins = freeSpinsCount;\n    return result;\n};\n/**\n * Checks if a specific payline has a winning combination\n * @param reelPositions 3x3 grid of symbol identifiers\n * @param payline The payline to check\n * @param betAmount The amount bet on this spin\n * @returns The win amount for this payline (0 if no win)\n */ const checkPaylineWin = (reelPositions, payline, betAmount)=>{\n    // Extract symbols along this payline\n    const symbolsOnPayline = payline.positions.map(([row, col])=>reelPositions[col][row] // Note the [col][row] order since reelPositions is organized by columns first\n    );\n    // Check if all symbols are the same (excluding special symbols that don't form winning lines)\n    const firstSymbol = symbolsOnPayline[0];\n    // Special symbols that don't form winning combinations by themselves\n    const nonWinningSymbols = [\n        \"multiplier-2x\",\n        \"multiplier-5x\",\n        \"multiplier-10x\",\n        \"free-spin\"\n    ];\n    // Skip checking if the first symbol is a special symbol\n    if (nonWinningSymbols.includes(firstSymbol)) {\n        return 0;\n    }\n    // Check if all symbols match the first one\n    const allMatch = symbolsOnPayline.every((symbol)=>symbol === firstSymbol || nonWinningSymbols.includes(symbol));\n    if (allMatch) {\n        // Get the payout for this symbol\n        const symbolConfig = _config_gameConfig__WEBPACK_IMPORTED_MODULE_0__.gameConfig.symbols[firstSymbol];\n        if (symbolConfig && symbolConfig.payout) {\n            return symbolConfig.payout * betAmount;\n        }\n    }\n    return 0;\n};\n/**\n * Gets the positions of symbols on a specific payline\n * @param paylineId The ID of the payline\n * @returns Array of positions or null if payline doesn't exist\n */ const getPaylinePositions = (paylineId)=>{\n    const payline = _config_paylines__WEBPACK_IMPORTED_MODULE_1__.paylines.find((p)=>p.id === paylineId);\n    return payline ? payline.positions : null;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    evaluateWin,\n    checkPaylineWin,\n    getPaylinePositions\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/gameLogic.ts\n");

/***/ }),

/***/ "./src/utils/randomGenerator.ts":
/*!**************************************!*\
  !*** ./src/utils/randomGenerator.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   generateClientSeed: () => (/* binding */ generateClientSeed),\n/* harmony export */   generateMultipleRandomNumbers: () => (/* binding */ generateMultipleRandomNumbers),\n/* harmony export */   generateRandomNumber: () => (/* binding */ generateRandomNumber),\n/* harmony export */   generateRandomSeed: () => (/* binding */ generateRandomSeed),\n/* harmony export */   generateReelPositions: () => (/* binding */ generateReelPositions),\n/* harmony export */   verifyServerSeed: () => (/* binding */ verifyServerSeed)\n/* harmony export */ });\n/* harmony import */ var _cryptoUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cryptoUtils */ \"./src/utils/cryptoUtils.ts\");\n// src/utils/randomGenerator.ts\n\n/**\n * Generate a cryptographically secure random seed\n * @returns A random seed string\n */ const generateRandomSeed = ()=>{\n    // In a real implementation, this would generate a cryptographically secure random seed\n    // For development, we'll use a simple random string\n    const randomBytes = new Uint8Array(32);\n    // Fill with random values\n    for(let i = 0; i < randomBytes.length; i++){\n        randomBytes[i] = Math.floor(Math.random() * 256);\n    }\n    // Convert to hex string\n    return Array.from(randomBytes).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n};\n/**\n * Generate a client seed for additional randomness\n * @returns A client seed string\n */ const generateClientSeed = ()=>{\n    // Generate a client seed based on current time and some random values\n    const timestamp = Date.now().toString();\n    const randomPart = Math.random().toString().slice(2);\n    // Combine and hash\n    return (0,_cryptoUtils__WEBPACK_IMPORTED_MODULE_0__.sha256)(`${timestamp}:${randomPart}`);\n};\n/**\n * Verify that a server seed matches its hash\n * @param serverSeed The revealed server seed after the game\n * @param serverSeedHash The hash of the server seed shown before the game\n * @returns Boolean indicating if the verification passed\n */ const verifyServerSeed = async (serverSeed, serverSeedHash)=>{\n    const calculatedHash = await (0,_cryptoUtils__WEBPACK_IMPORTED_MODULE_0__.sha256)(serverSeed);\n    return calculatedHash === serverSeedHash;\n};\n/**\n * Generate a random number using a combination of seeds\n * @param serverSeed The server seed\n * @param clientSeed The client seed\n * @param nonce The nonce (typically the round number)\n * @param min The minimum value (inclusive)\n * @param max The maximum value (exclusive)\n * @returns A random number between min and max\n */ const generateRandomNumber = async (serverSeed, clientSeed, nonce, min, max)=>{\n    // Combine inputs\n    const input = `${serverSeed}:${clientSeed}:${nonce}`;\n    // Hash the input\n    const hash = await (0,_cryptoUtils__WEBPACK_IMPORTED_MODULE_0__.sha256)(input);\n    // Convert first 8 characters of hash to a number between 0 and 1\n    const decimal = parseInt(hash.substring(0, 8), 16) / 0xffffffff;\n    // Scale to the desired range\n    return Math.floor(decimal * (max - min)) + min;\n};\n/**\n * Generate multiple random numbers using a single seed combination\n * @param serverSeed The server seed\n * @param clientSeed The client seed\n * @param nonce The starting nonce\n * @param count How many random numbers to generate\n * @param min The minimum value (inclusive)\n * @param max The maximum value (exclusive)\n * @returns An array of random numbers\n */ const generateMultipleRandomNumbers = async (serverSeed, clientSeed, nonce, count, min, max)=>{\n    const results = [];\n    for(let i = 0; i < count; i++){\n        const randomNum = await generateRandomNumber(serverSeed, clientSeed, nonce + i, min, max);\n        results.push(randomNum);\n    }\n    return results;\n};\n/**\n * Generate random reel positions using a seed combination\n * @param serverSeed The server seed\n * @param clientSeed The client seed\n * @param nonce The nonce\n * @returns A 3x3 array of indices representing symbol positions\n */ const generateReelPositions = async (serverSeed, clientSeed, nonce)=>{\n    // Generate 9 random numbers (3 reels x 3 positions)\n    const randomNumbers = await generateMultipleRandomNumbers(serverSeed, clientSeed, nonce, 9, 0, 100 // Range 0-99 for percentage-based symbol selection\n    );\n    // Convert to a 3x3 grid (organized by reels)\n    const positions = [\n        [],\n        [],\n        []\n    ];\n    for(let i = 0; i < randomNumbers.length; i++){\n        const reel = Math.floor(i / 3);\n        positions[reel].push(randomNumbers[i]);\n    }\n    return positions;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    generateRandomSeed,\n    generateClientSeed,\n    verifyServerSeed,\n    generateRandomNumber,\n    generateMultipleRandomNumbers,\n    generateReelPositions\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/randomGenerator.ts\n");

/***/ }),

/***/ "./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ (() => {



/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./src/pages/_app.tsx"));
module.exports = __webpack_exports__;

})();